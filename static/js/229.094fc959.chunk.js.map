{"version":3,"file":"static/js/229.094fc959.chunk.js","mappings":"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","sources":["pages/Programmes/Topic.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport { getTopics } from \"../../api/Courses\";\nimport 'katex/dist/katex.css';\nimport Skeleton from 'react-loading-skeleton'\nimport 'react-loading-skeleton/dist/skeleton.css'\nimport Slider from '@mui/material/Slider'\nimport { AiOutlineFontSize } from 'react-icons/ai'\nimport Helmet from \"react-helmet\";\n\nfunction Topic() {\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    const [fontScale, setFontScale] = useState(100)\n    const contentRef = useRef(null)\n    const titleRef = useRef(null)\n    const params = useParams()\n    const id1 = params.id1\n    const id2 = params.id2\n    const id3 = params.chapterId\n    const id4 = params.topicId\n    const [topic, setTopic] = useState(\"\")\n    const [fontChange, setFontChange] = useState(false)\n    const { data, error } = useSWR(process.env.REACT_APP_BACKEND + `/topic/${id1}/${id2}/${id3}/${id4}`, async url => {\n        if (id3 && id4)\n            return await getTopics(url)\n    }, { revalidateOnFocus: false, revalidateOnReconnect: true })\n\n    useEffect(() => {\n        if (typeof data !== typeof undefined) {\n            if (data?.success) {\n                setTopic(data?.data)\n            }\n        }\n        else if (error) {\n            setErrorMessage(error?.response?.data?.message)\n        }\n\n    }, [data, error]);\n\n    const doFontChange = () => {\n        if (fontChange) setFontChange(false)\n        else setFontChange(true)\n    }\n\n    const changeSize = (e) => {\n        contentRef.current.style.setProperty('font-size', `${e.target.value}%`)\n        titleRef.current.style.setProperty('font-size', `${e.target.value * 2}%`)\n    }\n\n    return (\n        <div className={`z-10 relative lg:col-span-4 flex flex-col w-full h-fit p-5 pt-0 px-10 dark:bg-background`}>\n            <Helmet>\n                <title>{`${data?.data?.title ? data?.data?.title + ' | ' : \"\"}Aakhyaan Academy`}</title>\n                <meta\n                    name=\"description\"\n                    content=\"Go through the topics you want to learn.\"\n                />;\n            </Helmet>\n            {!data && !error ?\n                <div className={`relative w-full h-full flex flex-col gap-10`}>\n                    <span className=\"place-self-center\"><Skeleton width={180} height={20} baseColor='gray' /></span>\n                    <div className='flex flex-col gap-1 mt-10'>\n                        {[...Array(15)].map((val, i) =>\n                            <div key={i} className='w-full mx-auto'><Skeleton baseColor=\"silver\" height={18} /></div>\n                        )}\n                    </div>\n                </div >\n                :\n                topic ?\n                    <div className={`w-full h-full flex flex-col gap-10`}>\n                        {fontChange ?\n                            <span onClick={doFontChange} className={`hover:cursor-pointer w-[100px] text-lg flex items-center gap-5 fixed bottom-4 right-8`}>\n                                <Slider\n                                    defaultValue={fontScale}\n                                    step={2}\n                                    min={50}\n                                    max={150}\n                                    onChange={changeSize}\n                                    aria-label=\"Default\"\n                                    valueLabelDisplay=\"auto\" />\n                                <div className=\"text-sm bg-blue-800 text-white rounded-md p-1 \">Ok</div>\n                            </span>\n                            :\n                            <span onClick={doFontChange} className={`text-lg bg-blue-800 fixed bottom-4 right-8 text-white rounded-md w-fit p-1 cursor-pointer`}>\n                                <AiOutlineFontSize className=\"cursor-pointer\" />\n                            </span>\n                        }\n                        <div ref={titleRef} className={`w-full text-center font-semibold tracking-wide break-words dark:text-mainText text-3xl`}>\n                            {topic?.title}\n                        </div>\n                        <div ref={contentRef} dangerouslySetInnerHTML={{ __html: topic.content }} className={`dark:text-mainText text-[${fontScale}px] pt-10 md:pt-0 w-full break-words min-h-fit h-full`}>\n                        </div>\n                    </div>\n                    :\n                    !errorMessage ?\n                        <div className=\"relative w-full h-full flex flex-col gap-10\">\n                            <div className=\"w-full text-center text-3xl font-semibold dark:text-mainText/90\">\n                                {topic?.title}\n                            </div>\n                            <div className=\"text-warningText w-full h-full flex items-center justify-center\">\n                                No content available at the moment. Please come back later.\n                            </div>\n                        </div>\n                        :\n                        <div className=\"text-warningText text-xl flex justify-center items-center\">{errorMessage}</div>\n            }\n        </div >\n    );\n}\n\nexport default Topic;"],"names":["useState","errorMessage","setErrorMessage","fontScale","contentRef","useRef","titleRef","params","useParams","id1","id2","id3","chapterId","id4","topicId","topic","setTopic","fontChange","setFontChange","useSWR","process","url","getTopics","revalidateOnFocus","revalidateOnReconnect","data","error","useEffect","success","response","message","doFontChange","className","title","name","content","onClick","defaultValue","step","min","max","onChange","e","current","style","setProperty","target","value","valueLabelDisplay","ref","dangerouslySetInnerHTML","__html","width","height","baseColor","Array","map","val","i"],"sourceRoot":""}