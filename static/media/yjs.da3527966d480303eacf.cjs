"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var observable=require("lib0/dist/observable.cjs"),array=require("lib0/dist/array.cjs"),math=require("lib0/dist/math.cjs"),map=require("lib0/dist/map.cjs"),encoding=require("lib0/dist/encoding.cjs"),decoding=require("lib0/dist/decoding.cjs"),random=require("lib0/dist/random.cjs"),promise=require("lib0/dist/promise.cjs"),buffer=require("lib0/dist/buffer.cjs"),error=require("lib0/dist/error.cjs"),binary=require("lib0/dist/binary.cjs"),f=require("lib0/dist/function.cjs"),set=require("lib0/dist/set.cjs"),logging=require("lib0/dist/logging.cjs"),time=require("lib0/dist/time.cjs"),iterator=require("lib0/dist/iterator.cjs"),object=require("lib0/dist/object.cjs");function _interopNamespace(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var array__namespace=_interopNamespace(array),math__namespace=_interopNamespace(math),map__namespace=_interopNamespace(map),encoding__namespace=_interopNamespace(encoding),decoding__namespace=_interopNamespace(decoding),random__namespace=_interopNamespace(random),promise__namespace=_interopNamespace(promise),buffer__namespace=_interopNamespace(buffer),error__namespace=_interopNamespace(error),binary__namespace=_interopNamespace(binary),f__namespace=_interopNamespace(f),set__namespace=_interopNamespace(set),logging__namespace=_interopNamespace(logging),time__namespace=_interopNamespace(time),iterator__namespace=_interopNamespace(iterator),object__namespace=_interopNamespace(object);class AbstractConnector extends observable.Observable{constructor(e,t){super(),this.doc=e,this.awareness=t}}class DeleteItem{constructor(e,t){this.clock=e,this.len=t}}class DeleteSet{constructor(){this.clients=new Map}}const iterateDeletedStructs=(e,t,n)=>t.clients.forEach(((t,r)=>{const i=e.doc.store.clients.get(r);for(let s=0;s<t.length;s++){const r=t[s];iterateStructs(e,i,r.clock,r.len,n)}})),findIndexDS=(e,t)=>{let n=0,r=e.length-1;for(;n<=r;){const i=math__namespace.floor((n+r)/2),s=e[i],a=s.clock;if(a<=t){if(t<a+s.len)return i;n=i+1}else r=i-1}return null},isDeleted=(e,t)=>{const n=e.clients.get(t.client);return void 0!==n&&null!==findIndexDS(n,t.clock)},sortAndMergeDeleteSet=e=>{e.clients.forEach((e=>{let t,n;for(e.sort(((e,t)=>e.clock-t.clock)),t=1,n=1;t<e.length;t++){const r=e[n-1],i=e[t];r.clock+r.len>=i.clock?r.len=math__namespace.max(r.len,i.clock+i.len-r.clock):(n<t&&(e[n]=i),n++)}e.length=n}))},mergeDeleteSets=e=>{const t=new DeleteSet;for(let n=0;n<e.length;n++)e[n].clients.forEach(((r,i)=>{if(!t.clients.has(i)){const s=r.slice();for(let t=n+1;t<e.length;t++)array__namespace.appendTo(s,e[t].clients.get(i)||[]);t.clients.set(i,s)}}));return sortAndMergeDeleteSet(t),t},addToDeleteSet=(e,t,n,r)=>{map__namespace.setIfUndefined(e.clients,t,(()=>[])).push(new DeleteItem(n,r))},createDeleteSet=()=>new DeleteSet,createDeleteSetFromStructStore=e=>{const t=createDeleteSet();return e.clients.forEach(((e,n)=>{const r=[];for(let t=0;t<e.length;t++){const n=e[t];if(n.deleted){const i=n.id.clock;let s=n.length;if(t+1<e.length)for(let n=e[t+1];t+1<e.length&&n.deleted;n=e[1+ ++t])s+=n.length;r.push(new DeleteItem(i,s))}}r.length>0&&t.clients.set(n,r)})),t},writeDeleteSet=(e,t)=>{encoding__namespace.writeVarUint(e.restEncoder,t.clients.size),t.clients.forEach(((t,n)=>{e.resetDsCurVal(),encoding__namespace.writeVarUint(e.restEncoder,n);const r=t.length;encoding__namespace.writeVarUint(e.restEncoder,r);for(let i=0;i<r;i++){const n=t[i];e.writeDsClock(n.clock),e.writeDsLen(n.len)}}))},readDeleteSet=e=>{const t=new DeleteSet,n=decoding__namespace.readVarUint(e.restDecoder);for(let r=0;r<n;r++){e.resetDsCurVal();const n=decoding__namespace.readVarUint(e.restDecoder),r=decoding__namespace.readVarUint(e.restDecoder);if(r>0){const i=map__namespace.setIfUndefined(t.clients,n,(()=>[]));for(let t=0;t<r;t++)i.push(new DeleteItem(e.readDsClock(),e.readDsLen()))}}return t},readAndApplyDeleteSet=(e,t,n)=>{const r=new DeleteSet,i=decoding__namespace.readVarUint(e.restDecoder);for(let s=0;s<i;s++){e.resetDsCurVal();const i=decoding__namespace.readVarUint(e.restDecoder),s=decoding__namespace.readVarUint(e.restDecoder),a=n.clients.get(i)||[],o=getState(n,i);for(let n=0;n<s;n++){const n=e.readDsClock(),s=n+e.readDsLen();if(n<o){o<s&&addToDeleteSet(r,i,o,s-o);let e=findIndexSS(a,n),c=a[e];for(!c.deleted&&c.id.clock<n&&(a.splice(e+1,0,splitItem(t,c,n-c.id.clock)),e++);e<a.length&&(c=a[e++],c.id.clock<s);)c.deleted||(s<c.id.clock+c.length&&a.splice(e,0,splitItem(t,c,s-c.id.clock)),c.delete(t))}else addToDeleteSet(r,i,n,s-n)}}if(r.clients.size>0){const e=new UpdateEncoderV2;return encoding__namespace.writeVarUint(e.restEncoder,0),writeDeleteSet(e,r),e.toUint8Array()}return null},generateNewClientId=random__namespace.uint32;class Doc extends observable.Observable{constructor({guid:e=random__namespace.uuidv4(),collectionid:t=null,gc:n=!0,gcFilter:r=(()=>!0),meta:i=null,autoLoad:s=!1,shouldLoad:a=!0}={}){super(),this.gc=n,this.gcFilter=r,this.clientID=generateNewClientId(),this.guid=e,this.collectionid=t,this.share=new Map,this.store=new StructStore,this._transaction=null,this._transactionCleanups=[],this.subdocs=new Set,this._item=null,this.shouldLoad=a,this.autoLoad=s,this.meta=i,this.isLoaded=!1,this.whenLoaded=promise__namespace.create((e=>{this.on("load",(()=>{this.isLoaded=!0,e(this)}))}))}load(){const e=this._item;null===e||this.shouldLoad||transact(e.parent.doc,(e=>{e.subdocsLoaded.add(this)}),null,!0),this.shouldLoad=!0}getSubdocs(){return this.subdocs}getSubdocGuids(){return new Set(Array.from(this.subdocs).map((e=>e.guid)))}transact(e,t=null){transact(this,e,t)}get(e,t=AbstractType){const n=map__namespace.setIfUndefined(this.share,e,(()=>{const e=new t;return e._integrate(this,null),e})),r=n.constructor;if(t!==AbstractType&&r!==t){if(r===AbstractType){const r=new t;r._map=n._map,n._map.forEach((e=>{for(;null!==e;e=e.left)e.parent=r})),r._start=n._start;for(let e=r._start;null!==e;e=e.right)e.parent=r;return r._length=n._length,this.share.set(e,r),r._integrate(this,null),r}throw new Error(`Type with the name ${e} has already been defined with a different constructor`)}return n}getArray(e=""){return this.get(e,YArray)}getText(e=""){return this.get(e,YText)}getMap(e=""){return this.get(e,YMap)}getXmlFragment(e=""){return this.get(e,YXmlFragment)}toJSON(){const e={};return this.share.forEach(((t,n)=>{e[n]=t.toJSON()})),e}destroy(){array__namespace.from(this.subdocs).forEach((e=>e.destroy()));const e=this._item;if(null!==e){this._item=null;const t=e.content;t.doc=new Doc({guid:this.guid,...t.opts,shouldLoad:!1}),t.doc._item=e,transact(e.parent.doc,(n=>{const r=t.doc;e.deleted||n.subdocsAdded.add(r),n.subdocsRemoved.add(this)}),null,!0)}this.emit("destroyed",[!0]),this.emit("destroy",[this]),super.destroy()}on(e,t){super.on(e,t)}off(e,t){super.off(e,t)}}class DSDecoderV1{constructor(e){this.restDecoder=e}resetDsCurVal(){}readDsClock(){return decoding__namespace.readVarUint(this.restDecoder)}readDsLen(){return decoding__namespace.readVarUint(this.restDecoder)}}class UpdateDecoderV1 extends DSDecoderV1{readLeftID(){return createID(decoding__namespace.readVarUint(this.restDecoder),decoding__namespace.readVarUint(this.restDecoder))}readRightID(){return createID(decoding__namespace.readVarUint(this.restDecoder),decoding__namespace.readVarUint(this.restDecoder))}readClient(){return decoding__namespace.readVarUint(this.restDecoder)}readInfo(){return decoding__namespace.readUint8(this.restDecoder)}readString(){return decoding__namespace.readVarString(this.restDecoder)}readParentInfo(){return 1===decoding__namespace.readVarUint(this.restDecoder)}readTypeRef(){return decoding__namespace.readVarUint(this.restDecoder)}readLen(){return decoding__namespace.readVarUint(this.restDecoder)}readAny(){return decoding__namespace.readAny(this.restDecoder)}readBuf(){return buffer__namespace.copyUint8Array(decoding__namespace.readVarUint8Array(this.restDecoder))}readJSON(){return JSON.parse(decoding__namespace.readVarString(this.restDecoder))}readKey(){return decoding__namespace.readVarString(this.restDecoder)}}class DSDecoderV2{constructor(e){this.dsCurrVal=0,this.restDecoder=e}resetDsCurVal(){this.dsCurrVal=0}readDsClock(){return this.dsCurrVal+=decoding__namespace.readVarUint(this.restDecoder),this.dsCurrVal}readDsLen(){const e=decoding__namespace.readVarUint(this.restDecoder)+1;return this.dsCurrVal+=e,e}}class UpdateDecoderV2 extends DSDecoderV2{constructor(e){super(e),this.keys=[],decoding__namespace.readVarUint(e),this.keyClockDecoder=new decoding__namespace.IntDiffOptRleDecoder(decoding__namespace.readVarUint8Array(e)),this.clientDecoder=new decoding__namespace.UintOptRleDecoder(decoding__namespace.readVarUint8Array(e)),this.leftClockDecoder=new decoding__namespace.IntDiffOptRleDecoder(decoding__namespace.readVarUint8Array(e)),this.rightClockDecoder=new decoding__namespace.IntDiffOptRleDecoder(decoding__namespace.readVarUint8Array(e)),this.infoDecoder=new decoding__namespace.RleDecoder(decoding__namespace.readVarUint8Array(e),decoding__namespace.readUint8),this.stringDecoder=new decoding__namespace.StringDecoder(decoding__namespace.readVarUint8Array(e)),this.parentInfoDecoder=new decoding__namespace.RleDecoder(decoding__namespace.readVarUint8Array(e),decoding__namespace.readUint8),this.typeRefDecoder=new decoding__namespace.UintOptRleDecoder(decoding__namespace.readVarUint8Array(e)),this.lenDecoder=new decoding__namespace.UintOptRleDecoder(decoding__namespace.readVarUint8Array(e))}readLeftID(){return new ID(this.clientDecoder.read(),this.leftClockDecoder.read())}readRightID(){return new ID(this.clientDecoder.read(),this.rightClockDecoder.read())}readClient(){return this.clientDecoder.read()}readInfo(){return this.infoDecoder.read()}readString(){return this.stringDecoder.read()}readParentInfo(){return 1===this.parentInfoDecoder.read()}readTypeRef(){return this.typeRefDecoder.read()}readLen(){return this.lenDecoder.read()}readAny(){return decoding__namespace.readAny(this.restDecoder)}readBuf(){return decoding__namespace.readVarUint8Array(this.restDecoder)}readJSON(){return decoding__namespace.readAny(this.restDecoder)}readKey(){const e=this.keyClockDecoder.read();if(e<this.keys.length)return this.keys[e];{const e=this.stringDecoder.read();return this.keys.push(e),e}}}class DSEncoderV1{constructor(){this.restEncoder=encoding__namespace.createEncoder()}toUint8Array(){return encoding__namespace.toUint8Array(this.restEncoder)}resetDsCurVal(){}writeDsClock(e){encoding__namespace.writeVarUint(this.restEncoder,e)}writeDsLen(e){encoding__namespace.writeVarUint(this.restEncoder,e)}}class UpdateEncoderV1 extends DSEncoderV1{writeLeftID(e){encoding__namespace.writeVarUint(this.restEncoder,e.client),encoding__namespace.writeVarUint(this.restEncoder,e.clock)}writeRightID(e){encoding__namespace.writeVarUint(this.restEncoder,e.client),encoding__namespace.writeVarUint(this.restEncoder,e.clock)}writeClient(e){encoding__namespace.writeVarUint(this.restEncoder,e)}writeInfo(e){encoding__namespace.writeUint8(this.restEncoder,e)}writeString(e){encoding__namespace.writeVarString(this.restEncoder,e)}writeParentInfo(e){encoding__namespace.writeVarUint(this.restEncoder,e?1:0)}writeTypeRef(e){encoding__namespace.writeVarUint(this.restEncoder,e)}writeLen(e){encoding__namespace.writeVarUint(this.restEncoder,e)}writeAny(e){encoding__namespace.writeAny(this.restEncoder,e)}writeBuf(e){encoding__namespace.writeVarUint8Array(this.restEncoder,e)}writeJSON(e){encoding__namespace.writeVarString(this.restEncoder,JSON.stringify(e))}writeKey(e){encoding__namespace.writeVarString(this.restEncoder,e)}}class DSEncoderV2{constructor(){this.restEncoder=encoding__namespace.createEncoder(),this.dsCurrVal=0}toUint8Array(){return encoding__namespace.toUint8Array(this.restEncoder)}resetDsCurVal(){this.dsCurrVal=0}writeDsClock(e){const t=e-this.dsCurrVal;this.dsCurrVal=e,encoding__namespace.writeVarUint(this.restEncoder,t)}writeDsLen(e){0===e&&error__namespace.unexpectedCase(),encoding__namespace.writeVarUint(this.restEncoder,e-1),this.dsCurrVal+=e}}class UpdateEncoderV2 extends DSEncoderV2{constructor(){super(),this.keyMap=new Map,this.keyClock=0,this.keyClockEncoder=new encoding__namespace.IntDiffOptRleEncoder,this.clientEncoder=new encoding__namespace.UintOptRleEncoder,this.leftClockEncoder=new encoding__namespace.IntDiffOptRleEncoder,this.rightClockEncoder=new encoding__namespace.IntDiffOptRleEncoder,this.infoEncoder=new encoding__namespace.RleEncoder(encoding__namespace.writeUint8),this.stringEncoder=new encoding__namespace.StringEncoder,this.parentInfoEncoder=new encoding__namespace.RleEncoder(encoding__namespace.writeUint8),this.typeRefEncoder=new encoding__namespace.UintOptRleEncoder,this.lenEncoder=new encoding__namespace.UintOptRleEncoder}toUint8Array(){const e=encoding__namespace.createEncoder();return encoding__namespace.writeVarUint(e,0),encoding__namespace.writeVarUint8Array(e,this.keyClockEncoder.toUint8Array()),encoding__namespace.writeVarUint8Array(e,this.clientEncoder.toUint8Array()),encoding__namespace.writeVarUint8Array(e,this.leftClockEncoder.toUint8Array()),encoding__namespace.writeVarUint8Array(e,this.rightClockEncoder.toUint8Array()),encoding__namespace.writeVarUint8Array(e,encoding__namespace.toUint8Array(this.infoEncoder)),encoding__namespace.writeVarUint8Array(e,this.stringEncoder.toUint8Array()),encoding__namespace.writeVarUint8Array(e,encoding__namespace.toUint8Array(this.parentInfoEncoder)),encoding__namespace.writeVarUint8Array(e,this.typeRefEncoder.toUint8Array()),encoding__namespace.writeVarUint8Array(e,this.lenEncoder.toUint8Array()),encoding__namespace.writeUint8Array(e,encoding__namespace.toUint8Array(this.restEncoder)),encoding__namespace.toUint8Array(e)}writeLeftID(e){this.clientEncoder.write(e.client),this.leftClockEncoder.write(e.clock)}writeRightID(e){this.clientEncoder.write(e.client),this.rightClockEncoder.write(e.clock)}writeClient(e){this.clientEncoder.write(e)}writeInfo(e){this.infoEncoder.write(e)}writeString(e){this.stringEncoder.write(e)}writeParentInfo(e){this.parentInfoEncoder.write(e?1:0)}writeTypeRef(e){this.typeRefEncoder.write(e)}writeLen(e){this.lenEncoder.write(e)}writeAny(e){encoding__namespace.writeAny(this.restEncoder,e)}writeBuf(e){encoding__namespace.writeVarUint8Array(this.restEncoder,e)}writeJSON(e){encoding__namespace.writeAny(this.restEncoder,e)}writeKey(e){const t=this.keyMap.get(e);void 0===t?(this.keyClockEncoder.write(this.keyClock++),this.stringEncoder.write(e)):this.keyClockEncoder.write(t)}}const writeStructs=(e,t,n,r)=>{r=math__namespace.max(r,t[0].id.clock);const i=findIndexSS(t,r);encoding__namespace.writeVarUint(e.restEncoder,t.length-i),e.writeClient(n),encoding__namespace.writeVarUint(e.restEncoder,r);const s=t[i];s.write(e,r-s.id.clock);for(let a=i+1;a<t.length;a++)t[a].write(e,0)},writeClientsStructs=(e,t,n)=>{const r=new Map;n.forEach(((e,n)=>{getState(t,n)>e&&r.set(n,e)})),getStateVector(t).forEach(((e,t)=>{n.has(t)||r.set(t,0)})),encoding__namespace.writeVarUint(e.restEncoder,r.size),Array.from(r.entries()).sort(((e,t)=>t[0]-e[0])).forEach((([n,r])=>{writeStructs(e,t.clients.get(n),n,r)}))},readClientsStructRefs=(e,t)=>{const n=map__namespace.create(),r=decoding__namespace.readVarUint(e.restDecoder);for(let i=0;i<r;i++){const r=decoding__namespace.readVarUint(e.restDecoder),i=new Array(r),s=e.readClient();let a=decoding__namespace.readVarUint(e.restDecoder);n.set(s,{i:0,refs:i});for(let n=0;n<r;n++){const r=e.readInfo();switch(binary__namespace.BITS5&r){case 0:{const t=e.readLen();i[n]=new GC(createID(s,a),t),a+=t;break}case 10:{const t=decoding__namespace.readVarUint(e.restDecoder);i[n]=new Skip(createID(s,a),t),a+=t;break}default:{const o=0===(r&(binary__namespace.BIT7|binary__namespace.BIT8)),c=new Item(createID(s,a),null,(r&binary__namespace.BIT8)===binary__namespace.BIT8?e.readLeftID():null,null,(r&binary__namespace.BIT7)===binary__namespace.BIT7?e.readRightID():null,o?e.readParentInfo()?t.get(e.readString()):e.readLeftID():null,o&&(r&binary__namespace.BIT6)===binary__namespace.BIT6?e.readString():null,readItemContent(e,r));i[n]=c,a+=c.length}}}}return n},integrateStructs=(e,t,n)=>{const r=[];let i=Array.from(n.keys()).sort(((e,t)=>e-t));if(0===i.length)return null;const s=()=>{if(0===i.length)return null;let e=n.get(i[i.length-1]);for(;e.refs.length===e.i;){if(i.pop(),!(i.length>0))return null;e=n.get(i[i.length-1])}return e};let a=s();if(null===a&&0===r.length)return null;const o=new StructStore,c=new Map,l=(e,t)=>{const n=c.get(e);(null==n||n>t)&&c.set(e,t)};let d=a.refs[a.i++];const h=new Map,p=()=>{for(const e of r){const t=e.id.client,r=n.get(t);r?(r.i--,o.clients.set(t,r.refs.slice(r.i)),n.delete(t),r.i=0,r.refs=[]):o.clients.set(t,[e]),i=i.filter((e=>e!==t))}r.length=0};for(;;){if(d.constructor!==Skip){const i=map__namespace.setIfUndefined(h,d.id.client,(()=>getState(t,d.id.client)))-d.id.clock;if(i<0)r.push(d),l(d.id.client,d.id.clock-1),p();else{const s=d.getMissing(e,t);if(null!==s){r.push(d);const e=n.get(s)||{refs:[],i:0};if(e.refs.length!==e.i){d=e.refs[e.i++];continue}l(s,getState(t,s)),p()}else(0===i||i<d.length)&&(d.integrate(e,i),h.set(d.id.client,d.id.clock+d.length))}}if(r.length>0)d=r.pop();else if(null!==a&&a.i<a.refs.length)d=a.refs[a.i++];else{if(a=s(),null===a)break;d=a.refs[a.i++]}}if(o.clients.size>0){const e=new UpdateEncoderV2;return writeClientsStructs(e,o,new Map),encoding__namespace.writeVarUint(e.restEncoder,0),{missing:c,update:e.toUint8Array()}}return null},writeStructsFromTransaction=(e,t)=>writeClientsStructs(e,t.doc.store,t.beforeState),readUpdateV2=(e,t,n,r=new UpdateDecoderV2(e))=>transact(t,(e=>{e.local=!1;let t=!1;const n=e.doc,i=n.store,s=readClientsStructRefs(r,n),a=integrateStructs(e,i,s),o=i.pendingStructs;if(o){for(const[e,n]of o.missing)if(n<getState(i,e)){t=!0;break}if(a){for(const[e,t]of a.missing){const n=o.missing.get(e);(null==n||n>t)&&o.missing.set(e,t)}o.update=mergeUpdatesV2([o.update,a.update])}}else i.pendingStructs=a;const c=readAndApplyDeleteSet(r,e,i);if(i.pendingDs){const t=new UpdateDecoderV2(decoding__namespace.createDecoder(i.pendingDs));decoding__namespace.readVarUint(t.restDecoder);const n=readAndApplyDeleteSet(t,e,i);i.pendingDs=c&&n?mergeUpdatesV2([c,n]):c||n}else i.pendingDs=c;if(t){const t=i.pendingStructs.update;i.pendingStructs=null,applyUpdateV2(e.doc,t)}}),n,!1),readUpdate=(e,t,n)=>readUpdateV2(e,t,n,new UpdateDecoderV1(e)),applyUpdateV2=(e,t,n,r=UpdateDecoderV2)=>{const i=decoding__namespace.createDecoder(t);readUpdateV2(i,e,n,new r(i))},applyUpdate=(e,t,n)=>applyUpdateV2(e,t,n,UpdateDecoderV1),writeStateAsUpdate=(e,t,n=new Map)=>{writeClientsStructs(e,t.store,n),writeDeleteSet(e,createDeleteSetFromStructStore(t.store))},encodeStateAsUpdateV2=(e,t=new Uint8Array([0]),n=new UpdateEncoderV2)=>{const r=decodeStateVector(t);writeStateAsUpdate(n,e,r);const i=[n.toUint8Array()];if(e.store.pendingDs&&i.push(e.store.pendingDs),e.store.pendingStructs&&i.push(diffUpdateV2(e.store.pendingStructs.update,t)),i.length>1){if(n.constructor===UpdateEncoderV1)return mergeUpdates(i.map(((e,t)=>0===t?e:convertUpdateFormatV2ToV1(e))));if(n.constructor===UpdateEncoderV2)return mergeUpdatesV2(i)}return i[0]},encodeStateAsUpdate=(e,t)=>encodeStateAsUpdateV2(e,t,new UpdateEncoderV1),readStateVector=e=>{const t=new Map,n=decoding__namespace.readVarUint(e.restDecoder);for(let r=0;r<n;r++){const n=decoding__namespace.readVarUint(e.restDecoder),r=decoding__namespace.readVarUint(e.restDecoder);t.set(n,r)}return t},decodeStateVector=e=>readStateVector(new DSDecoderV1(decoding__namespace.createDecoder(e))),writeStateVector=(e,t)=>(encoding__namespace.writeVarUint(e.restEncoder,t.size),Array.from(t.entries()).sort(((e,t)=>t[0]-e[0])).forEach((([t,n])=>{encoding__namespace.writeVarUint(e.restEncoder,t),encoding__namespace.writeVarUint(e.restEncoder,n)})),e),writeDocumentStateVector=(e,t)=>writeStateVector(e,getStateVector(t.store)),encodeStateVectorV2=(e,t=new DSEncoderV2)=>(e instanceof Map?writeStateVector(t,e):writeDocumentStateVector(t,e),t.toUint8Array()),encodeStateVector=e=>encodeStateVectorV2(e,new DSEncoderV1);class EventHandler{constructor(){this.l=[]}}const createEventHandler=()=>new EventHandler,addEventHandlerListener=(e,t)=>e.l.push(t),removeEventHandlerListener=(e,t)=>{const n=e.l,r=n.length;e.l=n.filter((e=>t!==e)),r===e.l.length&&console.error("[yjs] Tried to remove event handler that doesn't exist.")},callEventHandlerListeners=(e,t,n)=>f__namespace.callAll(e.l,[t,n]);class ID{constructor(e,t){this.client=e,this.clock=t}}const compareIDs=(e,t)=>e===t||null!==e&&null!==t&&e.client===t.client&&e.clock===t.clock,createID=(e,t)=>new ID(e,t),writeID=(e,t)=>{encoding__namespace.writeVarUint(e,t.client),encoding__namespace.writeVarUint(e,t.clock)},readID=e=>createID(decoding__namespace.readVarUint(e),decoding__namespace.readVarUint(e)),findRootTypeKey=e=>{for(const[t,n]of e.doc.share.entries())if(n===e)return t;throw error__namespace.unexpectedCase()},isParentOf=(e,t)=>{for(;null!==t;){if(t.parent===e)return!0;t=t.parent._item}return!1},logType=e=>{const t=[];let n=e._start;for(;n;)t.push(n),n=n.right;console.log("Children: ",t),console.log("Children content: ",t.filter((e=>!e.deleted)).map((e=>e.content)))};class PermanentUserData{constructor(e,t=e.getMap("users")){const n=new Map;this.yusers=t,this.doc=e,this.clients=new Map,this.dss=n;const r=(e,t)=>{const n=e.get("ds"),r=e.get("ids"),i=e=>this.clients.set(e,t);n.observe((e=>{e.changes.added.forEach((e=>{e.content.getContent().forEach((e=>{e instanceof Uint8Array&&this.dss.set(t,mergeDeleteSets([this.dss.get(t)||createDeleteSet(),readDeleteSet(new DSDecoderV1(decoding__namespace.createDecoder(e)))]))}))}))})),this.dss.set(t,mergeDeleteSets(n.map((e=>readDeleteSet(new DSDecoderV1(decoding__namespace.createDecoder(e))))))),r.observe((e=>e.changes.added.forEach((e=>e.content.getContent().forEach(i))))),r.forEach(i)};t.observe((e=>{e.keysChanged.forEach((e=>r(t.get(e),e)))})),t.forEach(r)}setUserMapping(e,t,n,{filter:r=(()=>!0)}={}){const i=this.yusers;let s=i.get(n);s||(s=new YMap,s.set("ids",new YArray),s.set("ds",new YArray),i.set(n,s)),s.get("ids").push([t]),i.observe((e=>{setTimeout((()=>{const e=i.get(n);if(e!==s){s=e,this.clients.forEach(((e,t)=>{n===e&&s.get("ids").push([t])}));const t=new DSEncoderV1,r=this.dss.get(n);r&&(writeDeleteSet(t,r),s.get("ds").push([t.toUint8Array()]))}}),0)})),e.on("afterTransaction",(e=>{setTimeout((()=>{const t=s.get("ds"),n=e.deleteSet;if(e.local&&n.clients.size>0&&r(e,n)){const e=new DSEncoderV1;writeDeleteSet(e,n),t.push([e.toUint8Array()])}}))}))}getUserByClientId(e){return this.clients.get(e)||null}getUserByDeletedId(e){for(const[t,n]of this.dss.entries())if(isDeleted(n,e))return t;return null}}class RelativePosition{constructor(e,t,n,r=0){this.type=e,this.tname=t,this.item=n,this.assoc=r}}const relativePositionToJSON=e=>{const t={};return e.type&&(t.type=e.type),e.tname&&(t.tname=e.tname),e.item&&(t.item=e.item),null!=e.assoc&&(t.assoc=e.assoc),t},createRelativePositionFromJSON=e=>new RelativePosition(null==e.type?null:createID(e.type.client,e.type.clock),e.tname||null,null==e.item?null:createID(e.item.client,e.item.clock),null==e.assoc?0:e.assoc);class AbsolutePosition{constructor(e,t,n=0){this.type=e,this.index=t,this.assoc=n}}const createAbsolutePosition=(e,t,n=0)=>new AbsolutePosition(e,t,n),createRelativePosition=(e,t,n)=>{let r=null,i=null;return null===e._item?i=findRootTypeKey(e):r=createID(e._item.id.client,e._item.id.clock),new RelativePosition(r,i,t,n)},createRelativePositionFromTypeIndex=(e,t,n=0)=>{let r=e._start;if(n<0){if(0===t)return createRelativePosition(e,null,n);t--}for(;null!==r;){if(!r.deleted&&r.countable){if(r.length>t)return createRelativePosition(e,createID(r.id.client,r.id.clock+t),n);t-=r.length}if(null===r.right&&n<0)return createRelativePosition(e,r.lastId,n);r=r.right}return createRelativePosition(e,null,n)},writeRelativePosition=(e,t)=>{const{type:n,tname:r,item:i,assoc:s}=t;if(null!==i)encoding__namespace.writeVarUint(e,0),writeID(e,i);else if(null!==r)encoding__namespace.writeUint8(e,1),encoding__namespace.writeVarString(e,r);else{if(null===n)throw error__namespace.unexpectedCase();encoding__namespace.writeUint8(e,2),writeID(e,n)}return encoding__namespace.writeVarInt(e,s),e},encodeRelativePosition=e=>{const t=encoding__namespace.createEncoder();return writeRelativePosition(t,e),encoding__namespace.toUint8Array(t)},readRelativePosition=e=>{let t=null,n=null,r=null;switch(decoding__namespace.readVarUint(e)){case 0:r=readID(e);break;case 1:n=decoding__namespace.readVarString(e);break;case 2:t=readID(e)}const i=decoding__namespace.hasContent(e)?decoding__namespace.readVarInt(e):0;return new RelativePosition(t,n,r,i)},decodeRelativePosition=e=>readRelativePosition(decoding__namespace.createDecoder(e)),createAbsolutePositionFromRelativePosition=(e,t)=>{const n=t.store,r=e.item,i=e.type,s=e.tname,a=e.assoc;let o=null,c=0;if(null!==r){if(getState(n,r.client)<=r.clock)return null;const e=followRedone(n,r),t=e.item;if(!(t instanceof Item))return null;if(o=t.parent,null===o._item||!o._item.deleted){c=t.deleted||!t.countable?0:e.diff+(a>=0?0:1);let n=t.left;for(;null!==n;)!n.deleted&&n.countable&&(c+=n.length),n=n.left}}else{if(null!==s)o=t.get(s);else{if(null===i)throw error__namespace.unexpectedCase();{if(getState(n,i.client)<=i.clock)return null;const{item:e}=followRedone(n,i);if(!(e instanceof Item&&e.content instanceof ContentType))return null;o=e.content.type}}c=a>=0?o._length:0}return createAbsolutePosition(o,c,e.assoc)},compareRelativePositions=(e,t)=>e===t||null!==e&&null!==t&&e.tname===t.tname&&compareIDs(e.item,t.item)&&compareIDs(e.type,t.type)&&e.assoc===t.assoc;class Snapshot{constructor(e,t){this.ds=e,this.sv=t}}const equalSnapshots=(e,t)=>{const n=e.ds.clients,r=t.ds.clients,i=e.sv,s=t.sv;if(i.size!==s.size||n.size!==r.size)return!1;for(const[a,o]of i.entries())if(s.get(a)!==o)return!1;for(const[a,o]of n.entries()){const e=r.get(a)||[];if(o.length!==e.length)return!1;for(let t=0;t<o.length;t++){const n=o[t],r=e[t];if(n.clock!==r.clock||n.len!==r.len)return!1}}return!0},encodeSnapshotV2=(e,t=new DSEncoderV2)=>(writeDeleteSet(t,e.ds),writeStateVector(t,e.sv),t.toUint8Array()),encodeSnapshot=e=>encodeSnapshotV2(e,new DSEncoderV1),decodeSnapshotV2=(e,t=new DSDecoderV2(decoding__namespace.createDecoder(e)))=>new Snapshot(readDeleteSet(t),readStateVector(t)),decodeSnapshot=e=>decodeSnapshotV2(e,new DSDecoderV1(decoding__namespace.createDecoder(e))),createSnapshot=(e,t)=>new Snapshot(e,t),emptySnapshot=createSnapshot(createDeleteSet(),new Map),snapshot=e=>createSnapshot(createDeleteSetFromStructStore(e.store),getStateVector(e.store)),isVisible=(e,t)=>void 0===t?!e.deleted:t.sv.has(e.id.client)&&(t.sv.get(e.id.client)||0)>e.id.clock&&!isDeleted(t.ds,e.id),splitSnapshotAffectedStructs=(e,t)=>{const n=map__namespace.setIfUndefined(e.meta,splitSnapshotAffectedStructs,set__namespace.create),r=e.doc.store;n.has(t)||(t.sv.forEach(((t,n)=>{t<getState(r,n)&&getItemCleanStart(e,createID(n,t))})),iterateDeletedStructs(e,t.ds,(e=>{})),n.add(t))},createDocFromSnapshot=(e,t,n=new Doc)=>{if(e.gc)throw new Error("originDoc must not be garbage collected");const{sv:r,ds:i}=t,s=new UpdateEncoderV2;return e.transact((t=>{let n=0;r.forEach((e=>{e>0&&n++})),encoding__namespace.writeVarUint(s.restEncoder,n);for(const[i,a]of r){if(0===a)continue;a<getState(e.store,i)&&getItemCleanStart(t,createID(i,a));const n=e.store.clients.get(i)||[],r=findIndexSS(n,a-1);encoding__namespace.writeVarUint(s.restEncoder,r+1),s.writeClient(i),encoding__namespace.writeVarUint(s.restEncoder,0);for(let e=0;e<=r;e++)n[e].write(s,0)}writeDeleteSet(s,i)})),applyUpdateV2(n,s.toUint8Array(),"snapshot"),n};class StructStore{constructor(){this.clients=new Map,this.pendingStructs=null,this.pendingDs=null}}const getStateVector=e=>{const t=new Map;return e.clients.forEach(((e,n)=>{const r=e[e.length-1];t.set(n,r.id.clock+r.length)})),t},getState=(e,t)=>{const n=e.clients.get(t);if(void 0===n)return 0;const r=n[n.length-1];return r.id.clock+r.length},addStruct=(e,t)=>{let n=e.clients.get(t.id.client);if(void 0===n)n=[],e.clients.set(t.id.client,n);else{const e=n[n.length-1];if(e.id.clock+e.length!==t.id.clock)throw error__namespace.unexpectedCase()}n.push(t)},findIndexSS=(e,t)=>{let n=0,r=e.length-1,i=e[r],s=i.id.clock;if(s===t)return r;let a=math__namespace.floor(t/(s+i.length-1)*r);for(;n<=r;){if(i=e[a],s=i.id.clock,s<=t){if(t<s+i.length)return a;n=a+1}else r=a-1;a=math__namespace.floor((n+r)/2)}throw error__namespace.unexpectedCase()},find=(e,t)=>{const n=e.clients.get(t.client);return n[findIndexSS(n,t.clock)]},getItem=find,findIndexCleanStart=(e,t,n)=>{const r=findIndexSS(t,n),i=t[r];return i.id.clock<n&&i instanceof Item?(t.splice(r+1,0,splitItem(e,i,n-i.id.clock)),r+1):r},getItemCleanStart=(e,t)=>{const n=e.doc.store.clients.get(t.client);return n[findIndexCleanStart(e,n,t.clock)]},getItemCleanEnd=(e,t,n)=>{const r=t.clients.get(n.client),i=findIndexSS(r,n.clock),s=r[i];return n.clock!==s.id.clock+s.length-1&&s.constructor!==GC&&r.splice(i+1,0,splitItem(e,s,n.clock-s.id.clock+1)),s},replaceStruct=(e,t,n)=>{const r=e.clients.get(t.id.client);r[findIndexSS(r,t.id.clock)]=n},iterateStructs=(e,t,n,r,i)=>{if(0===r)return;const s=n+r;let a,o=findIndexCleanStart(e,t,n);do{a=t[o++],s<a.id.clock+a.length&&findIndexCleanStart(e,t,s),i(a)}while(o<t.length&&t[o].id.clock<s)};class Transaction{constructor(e,t,n){this.doc=e,this.deleteSet=new DeleteSet,this.beforeState=getStateVector(e.store),this.afterState=new Map,this.changed=new Map,this.changedParentTypes=new Map,this._mergeStructs=[],this.origin=t,this.meta=new Map,this.local=n,this.subdocsAdded=new Set,this.subdocsRemoved=new Set,this.subdocsLoaded=new Set}}const writeUpdateMessageFromTransaction=(e,t)=>!(0===t.deleteSet.clients.size&&!map__namespace.any(t.afterState,((e,n)=>t.beforeState.get(n)!==e)))&&(sortAndMergeDeleteSet(t.deleteSet),writeStructsFromTransaction(e,t),writeDeleteSet(e,t.deleteSet),!0),addChangedTypeToTransaction=(e,t,n)=>{const r=t._item;(null===r||r.id.clock<(e.beforeState.get(r.id.client)||0)&&!r.deleted)&&map__namespace.setIfUndefined(e.changed,t,set__namespace.create).add(n)},tryToMergeWithLeft=(e,t)=>{const n=e[t-1],r=e[t];n.deleted===r.deleted&&n.constructor===r.constructor&&n.mergeWith(r)&&(e.splice(t,1),r instanceof Item&&null!==r.parentSub&&r.parent._map.get(r.parentSub)===r&&r.parent._map.set(r.parentSub,n))},tryGcDeleteSet=(e,t,n)=>{for(const[r,i]of e.clients.entries()){const e=t.clients.get(r);for(let r=i.length-1;r>=0;r--){const s=i[r],a=s.clock+s.len;for(let r=findIndexSS(e,s.clock),i=e[r];r<e.length&&i.id.clock<a;i=e[++r]){const i=e[r];if(s.clock+s.len<=i.id.clock)break;i instanceof Item&&i.deleted&&!i.keep&&n(i)&&i.gc(t,!1)}}}},tryMergeDeleteSet=(e,t)=>{e.clients.forEach(((e,n)=>{const r=t.clients.get(n);for(let t=e.length-1;t>=0;t--){const n=e[t];for(let e=math__namespace.min(r.length-1,1+findIndexSS(r,n.clock+n.len-1)),t=r[e];e>0&&t.id.clock>=n.clock;t=r[--e])tryToMergeWithLeft(r,e)}}))},tryGc=(e,t,n)=>{tryGcDeleteSet(e,t,n),tryMergeDeleteSet(e,t)},cleanupTransactions=(e,t)=>{if(t<e.length){const n=e[t],r=n.doc,i=r.store,s=n.deleteSet,a=n._mergeStructs;try{sortAndMergeDeleteSet(s),n.afterState=getStateVector(n.doc.store),r._transaction=null,r.emit("beforeObserverCalls",[n,r]);const o=[];n.changed.forEach(((e,t)=>o.push((()=>{null!==t._item&&t._item.deleted||t._callObserver(n,e)})))),o.push((()=>{n.changedParentTypes.forEach(((e,t)=>o.push((()=>{null!==t._item&&t._item.deleted||((e=e.filter((e=>null===e.target._item||!e.target._item.deleted))).forEach((e=>{e.currentTarget=t})),e.sort(((e,t)=>e.path.length-t.path.length)),callEventHandlerListeners(t._dEH,e,n))})))),o.push((()=>r.emit("afterTransaction",[n,r])))})),f.callAll(o,[])}finally{r.gc&&tryGcDeleteSet(s,i,r.gcFilter),tryMergeDeleteSet(s,i),n.afterState.forEach(((e,t)=>{const r=n.beforeState.get(t)||0;if(r!==e){const e=i.clients.get(t),n=math__namespace.max(findIndexSS(e,r),1);for(let t=e.length-1;t>=n;t--)tryToMergeWithLeft(e,t)}}));for(let e=0;e<a.length;e++){const{client:t,clock:n}=a[e].id,r=i.clients.get(t),s=findIndexSS(r,n);s+1<r.length&&tryToMergeWithLeft(r,s+1),s>0&&tryToMergeWithLeft(r,s)}if(n.local||n.afterState.get(r.clientID)===n.beforeState.get(r.clientID)||(logging__namespace.print(logging__namespace.ORANGE,logging__namespace.BOLD,"[yjs] ",logging__namespace.UNBOLD,logging__namespace.RED,"Changed the client-id because another client seems to be using it."),r.clientID=generateNewClientId()),r.emit("afterTransactionCleanup",[n,r]),r._observers.has("update")){const e=new UpdateEncoderV1;writeUpdateMessageFromTransaction(e,n)&&r.emit("update",[e.toUint8Array(),n.origin,r,n])}if(r._observers.has("updateV2")){const e=new UpdateEncoderV2;writeUpdateMessageFromTransaction(e,n)&&r.emit("updateV2",[e.toUint8Array(),n.origin,r,n])}const{subdocsAdded:o,subdocsLoaded:c,subdocsRemoved:l}=n;(o.size>0||l.size>0||c.size>0)&&(o.forEach((e=>{e.clientID=r.clientID,null==e.collectionid&&(e.collectionid=r.collectionid),r.subdocs.add(e)})),l.forEach((e=>r.subdocs.delete(e))),r.emit("subdocs",[{loaded:c,added:o,removed:l},r,n]),l.forEach((e=>e.destroy()))),e.length<=t+1?(r._transactionCleanups=[],r.emit("afterAllTransactions",[r,e])):cleanupTransactions(e,t+1)}}},transact=(e,t,n=null,r=!0)=>{const i=e._transactionCleanups;let s=!1;null===e._transaction&&(s=!0,e._transaction=new Transaction(e,n,r),i.push(e._transaction),1===i.length&&e.emit("beforeAllTransactions",[e]),e.emit("beforeTransaction",[e._transaction,e]));try{t(e._transaction)}finally{s&&i[0]===e._transaction&&cleanupTransactions(i,0)}};class StackItem{constructor(e,t){this.insertions=t,this.deletions=e,this.meta=new Map}}const clearUndoManagerStackItem=(e,t,n)=>{iterateDeletedStructs(e,n.deletions,(e=>{e instanceof Item&&t.scope.some((t=>isParentOf(t,e)))&&keepItem(e,!1)}))},popStackItem=(e,t,n)=>{let r=null,i=null;const s=e.doc,a=e.scope;if(transact(s,(n=>{for(;t.length>0&&null===r;){const i=s.store,o=t.pop(),c=new Set,l=[];let d=!1;iterateDeletedStructs(n,o.insertions,(e=>{if(e instanceof Item){if(null!==e.redone){let{item:t,diff:r}=followRedone(i,e.id);r>0&&(t=getItemCleanStart(n,createID(t.id.client,t.id.clock+r))),e=t}!e.deleted&&a.some((t=>isParentOf(t,e)))&&l.push(e)}})),iterateDeletedStructs(n,o.deletions,(e=>{e instanceof Item&&a.some((t=>isParentOf(t,e)))&&!isDeleted(o.insertions,e.id)&&c.add(e)})),c.forEach((t=>{d=null!==redoItem(n,t,c,o.insertions,e.ignoreRemoteMapChanges)||d}));for(let t=l.length-1;t>=0;t--){const r=l[t];e.deleteFilter(r)&&(r.delete(n),d=!0)}r=d?o:null}n.changed.forEach(((e,t)=>{e.has(null)&&t._searchMarker&&(t._searchMarker.length=0)})),i=n}),e),null!=r){const t=i.changedParentTypes;e.emit("stack-item-popped",[{stackItem:r,type:n,changedParentTypes:t},e])}return r};class UndoManager extends observable.Observable{constructor(e,{captureTimeout:t=500,captureTransaction:n=(e=>!0),deleteFilter:r=(()=>!0),trackedOrigins:i=new Set([null]),ignoreRemoteMapChanges:s=!1,doc:a=(array__namespace.isArray(e)?e[0].doc:e.doc)}={}){super(),this.scope=[],this.addToScope(e),this.deleteFilter=r,i.add(this),this.trackedOrigins=i,this.captureTransaction=n,this.undoStack=[],this.redoStack=[],this.undoing=!1,this.redoing=!1,this.doc=a,this.lastChange=0,this.ignoreRemoteMapChanges=s,this.afterTransactionHandler=e=>{if(!this.captureTransaction(e)||!this.scope.some((t=>e.changedParentTypes.has(t)))||!this.trackedOrigins.has(e.origin)&&(!e.origin||!this.trackedOrigins.has(e.origin.constructor)))return;const n=this.undoing,r=this.redoing,i=n?this.redoStack:this.undoStack;n?this.stopCapturing():r||this.clear(!1,!0);const s=new DeleteSet;e.afterState.forEach(((t,n)=>{const r=e.beforeState.get(n)||0,i=t-r;i>0&&addToDeleteSet(s,n,r,i)}));const a=time__namespace.getUnixTime();let o=!1;if(a-this.lastChange<t&&i.length>0&&!n&&!r){const t=i[i.length-1];t.deletions=mergeDeleteSets([t.deletions,e.deleteSet]),t.insertions=mergeDeleteSets([t.insertions,s])}else i.push(new StackItem(e.deleteSet,s)),o=!0;n||r||(this.lastChange=a),iterateDeletedStructs(e,e.deleteSet,(e=>{e instanceof Item&&this.scope.some((t=>isParentOf(t,e)))&&keepItem(e,!0)}));const c=[{stackItem:i[i.length-1],origin:e.origin,type:n?"redo":"undo",changedParentTypes:e.changedParentTypes},this];o?this.emit("stack-item-added",c):this.emit("stack-item-updated",c)},this.doc.on("afterTransaction",this.afterTransactionHandler),this.doc.on("destroy",(()=>{this.destroy()}))}addToScope(e){(e=array__namespace.isArray(e)?e:[e]).forEach((e=>{this.scope.every((t=>t!==e))&&this.scope.push(e)}))}addTrackedOrigin(e){this.trackedOrigins.add(e)}removeTrackedOrigin(e){this.trackedOrigins.delete(e)}clear(e=!0,t=!0){(e&&this.canUndo()||t&&this.canRedo())&&this.doc.transact((n=>{e&&(this.undoStack.forEach((e=>clearUndoManagerStackItem(n,this,e))),this.undoStack=[]),t&&(this.redoStack.forEach((e=>clearUndoManagerStackItem(n,this,e))),this.redoStack=[]),this.emit("stack-cleared",[{undoStackCleared:e,redoStackCleared:t}])}))}stopCapturing(){this.lastChange=0}undo(){let e;this.undoing=!0;try{e=popStackItem(this,this.undoStack,"undo")}finally{this.undoing=!1}return e}redo(){let e;this.redoing=!0;try{e=popStackItem(this,this.redoStack,"redo")}finally{this.redoing=!1}return e}canUndo(){return this.undoStack.length>0}canRedo(){return this.redoStack.length>0}destroy(){this.trackedOrigins.delete(this),this.doc.off("afterTransaction",this.afterTransactionHandler),super.destroy()}}function*lazyStructReaderGenerator(e){const t=decoding__namespace.readVarUint(e.restDecoder);for(let n=0;n<t;n++){const t=decoding__namespace.readVarUint(e.restDecoder),n=e.readClient();let r=decoding__namespace.readVarUint(e.restDecoder);for(let i=0;i<t;i++){const t=e.readInfo();if(10===t){const t=decoding__namespace.readVarUint(e.restDecoder);yield new Skip(createID(n,r),t),r+=t}else if(0!==(binary__namespace.BITS5&t)){const i=0===(t&(binary__namespace.BIT7|binary__namespace.BIT8)),s=new Item(createID(n,r),null,(t&binary__namespace.BIT8)===binary__namespace.BIT8?e.readLeftID():null,null,(t&binary__namespace.BIT7)===binary__namespace.BIT7?e.readRightID():null,i?e.readParentInfo()?e.readString():e.readLeftID():null,i&&(t&binary__namespace.BIT6)===binary__namespace.BIT6?e.readString():null,readItemContent(e,t));yield s,r+=s.length}else{const t=e.readLen();yield new GC(createID(n,r),t),r+=t}}}}class LazyStructReader{constructor(e,t){this.gen=lazyStructReaderGenerator(e),this.curr=null,this.done=!1,this.filterSkips=t,this.next()}next(){do{this.curr=this.gen.next().value||null}while(this.filterSkips&&null!==this.curr&&this.curr.constructor===Skip);return this.curr}}const logUpdate=e=>logUpdateV2(e,UpdateDecoderV1),logUpdateV2=(e,t=UpdateDecoderV2)=>{const n=[],r=new t(decoding__namespace.createDecoder(e)),i=new LazyStructReader(r,!1);for(let a=i.curr;null!==a;a=i.next())n.push(a);logging__namespace.print("Structs: ",n);const s=readDeleteSet(r);logging__namespace.print("DeleteSet: ",s)},decodeUpdate=e=>decodeUpdateV2(e,UpdateDecoderV1),decodeUpdateV2=(e,t=UpdateDecoderV2)=>{const n=[],r=new t(decoding__namespace.createDecoder(e)),i=new LazyStructReader(r,!1);for(let s=i.curr;null!==s;s=i.next())n.push(s);return{structs:n,ds:readDeleteSet(r)}};class LazyStructWriter{constructor(e){this.currClient=0,this.startClock=0,this.written=0,this.encoder=e,this.clientStructs=[]}}const mergeUpdates=e=>mergeUpdatesV2(e,UpdateDecoderV1,UpdateEncoderV1),encodeStateVectorFromUpdateV2=(e,t=DSEncoderV2,n=UpdateDecoderV2)=>{const r=new t,i=new LazyStructReader(new n(decoding__namespace.createDecoder(e)),!1);let s=i.curr;if(null!==s){let e=0,t=s.id.client,n=0!==s.id.clock,a=n?0:s.id.clock+s.length;for(;null!==s;s=i.next())t!==s.id.client&&(0!==a&&(e++,encoding__namespace.writeVarUint(r.restEncoder,t),encoding__namespace.writeVarUint(r.restEncoder,a)),t=s.id.client,a=0,n=0!==s.id.clock),s.constructor===Skip&&(n=!0),n||(a=s.id.clock+s.length);0!==a&&(e++,encoding__namespace.writeVarUint(r.restEncoder,t),encoding__namespace.writeVarUint(r.restEncoder,a));const o=encoding__namespace.createEncoder();return encoding__namespace.writeVarUint(o,e),encoding__namespace.writeBinaryEncoder(o,r.restEncoder),r.restEncoder=o,r.toUint8Array()}return encoding__namespace.writeVarUint(r.restEncoder,0),r.toUint8Array()},encodeStateVectorFromUpdate=e=>encodeStateVectorFromUpdateV2(e,DSEncoderV1,UpdateDecoderV1),parseUpdateMetaV2=(e,t=UpdateDecoderV2)=>{const n=new Map,r=new Map,i=new LazyStructReader(new t(decoding__namespace.createDecoder(e)),!1);let s=i.curr;if(null!==s){let e=s.id.client,t=s.id.clock;for(n.set(e,t);null!==s;s=i.next())e!==s.id.client&&(r.set(e,t),n.set(s.id.client,s.id.clock),e=s.id.client),t=s.id.clock+s.length;r.set(e,t)}return{from:n,to:r}},parseUpdateMeta=e=>parseUpdateMetaV2(e,UpdateDecoderV1),sliceStruct=(e,t)=>{if(e.constructor===GC){const{client:n,clock:r}=e.id;return new GC(createID(n,r+t),e.length-t)}if(e.constructor===Skip){const{client:n,clock:r}=e.id;return new Skip(createID(n,r+t),e.length-t)}{const n=e,{client:r,clock:i}=n.id;return new Item(createID(r,i+t),null,createID(r,i+t-1),null,n.rightOrigin,n.parent,n.parentSub,n.content.splice(t))}},mergeUpdatesV2=(e,t=UpdateDecoderV2,n=UpdateEncoderV2)=>{if(1===e.length)return e[0];const r=e.map((e=>new t(decoding__namespace.createDecoder(e))));let i=r.map((e=>new LazyStructReader(e,!0))),s=null;const a=new n,o=new LazyStructWriter(a);for(;i=i.filter((e=>null!==e.curr)),i.sort(((e,t)=>{if(e.curr.id.client===t.curr.id.client){const n=e.curr.id.clock-t.curr.id.clock;return 0===n?e.curr.constructor===t.curr.constructor?0:e.curr.constructor===Skip?1:-1:n}return t.curr.id.client-e.curr.id.client})),0!==i.length;){const e=i[0],t=e.curr.id.client;if(null!==s){let n=e.curr,r=!1;for(;null!==n&&n.id.clock+n.length<=s.struct.id.clock+s.struct.length&&n.id.client>=s.struct.id.client;)n=e.next(),r=!0;if(null===n||n.id.client!==t||r&&n.id.clock>s.struct.id.clock+s.struct.length)continue;if(t!==s.struct.id.client)writeStructToLazyStructWriter(o,s.struct,s.offset),s={struct:n,offset:0},e.next();else if(s.struct.id.clock+s.struct.length<n.id.clock)if(s.struct.constructor===Skip)s.struct.length=n.id.clock+n.length-s.struct.id.clock;else{writeStructToLazyStructWriter(o,s.struct,s.offset);const e=n.id.clock-s.struct.id.clock-s.struct.length;s={struct:new Skip(createID(t,s.struct.id.clock+s.struct.length),e),offset:0}}else{const t=s.struct.id.clock+s.struct.length-n.id.clock;t>0&&(s.struct.constructor===Skip?s.struct.length-=t:n=sliceStruct(n,t)),s.struct.mergeWith(n)||(writeStructToLazyStructWriter(o,s.struct,s.offset),s={struct:n,offset:0},e.next())}}else s={struct:e.curr,offset:0},e.next();for(let n=e.curr;null!==n&&n.id.client===t&&n.id.clock===s.struct.id.clock+s.struct.length&&n.constructor!==Skip;n=e.next())writeStructToLazyStructWriter(o,s.struct,s.offset),s={struct:n,offset:0}}null!==s&&(writeStructToLazyStructWriter(o,s.struct,s.offset),s=null),finishLazyStructWriting(o);const c=r.map((e=>readDeleteSet(e))),l=mergeDeleteSets(c);return writeDeleteSet(a,l),a.toUint8Array()},diffUpdateV2=(e,t,n=UpdateDecoderV2,r=UpdateEncoderV2)=>{const i=decodeStateVector(t),s=new r,a=new LazyStructWriter(s),o=new n(decoding__namespace.createDecoder(e)),c=new LazyStructReader(o,!1);for(;c.curr;){const e=c.curr,t=e.id.client,n=i.get(t)||0;if(c.curr.constructor!==Skip)if(e.id.clock+e.length>n)for(writeStructToLazyStructWriter(a,e,math__namespace.max(n-e.id.clock,0)),c.next();c.curr&&c.curr.id.client===t;)writeStructToLazyStructWriter(a,c.curr,0),c.next();else for(;c.curr&&c.curr.id.client===t&&c.curr.id.clock+c.curr.length<=n;)c.next();else c.next()}finishLazyStructWriting(a);const l=readDeleteSet(o);return writeDeleteSet(s,l),s.toUint8Array()},diffUpdate=(e,t)=>diffUpdateV2(e,t,UpdateDecoderV1,UpdateEncoderV1),flushLazyStructWriter=e=>{e.written>0&&(e.clientStructs.push({written:e.written,restEncoder:encoding__namespace.toUint8Array(e.encoder.restEncoder)}),e.encoder.restEncoder=encoding__namespace.createEncoder(),e.written=0)},writeStructToLazyStructWriter=(e,t,n)=>{e.written>0&&e.currClient!==t.id.client&&flushLazyStructWriter(e),0===e.written&&(e.currClient=t.id.client,e.encoder.writeClient(t.id.client),encoding__namespace.writeVarUint(e.encoder.restEncoder,t.id.clock+n)),t.write(e.encoder,n),e.written++},finishLazyStructWriting=e=>{flushLazyStructWriter(e);const t=e.encoder.restEncoder;encoding__namespace.writeVarUint(t,e.clientStructs.length);for(let n=0;n<e.clientStructs.length;n++){const r=e.clientStructs[n];encoding__namespace.writeVarUint(t,r.written),encoding__namespace.writeUint8Array(t,r.restEncoder)}},convertUpdateFormat=(e,t,n)=>{const r=new t(decoding__namespace.createDecoder(e)),i=new LazyStructReader(r,!1),s=new n,a=new LazyStructWriter(s);for(let c=i.curr;null!==c;c=i.next())writeStructToLazyStructWriter(a,c,0);finishLazyStructWriting(a);const o=readDeleteSet(r);return writeDeleteSet(s,o),s.toUint8Array()},convertUpdateFormatV1ToV2=e=>convertUpdateFormat(e,UpdateDecoderV1,UpdateEncoderV2),convertUpdateFormatV2ToV1=e=>convertUpdateFormat(e,UpdateDecoderV2,UpdateEncoderV1);class YEvent{constructor(e,t){this.target=e,this.currentTarget=e,this.transaction=t,this._changes=null,this._keys=null,this._delta=null}get path(){return getPathTo(this.currentTarget,this.target)}deletes(e){return isDeleted(this.transaction.deleteSet,e.id)}get keys(){if(null===this._keys){const e=new Map,t=this.target;this.transaction.changed.get(t).forEach((n=>{if(null!==n){const r=t._map.get(n);let i,s;if(this.adds(r)){let e=r.left;for(;null!==e&&this.adds(e);)e=e.left;if(this.deletes(r)){if(null===e||!this.deletes(e))return;i="delete",s=array__namespace.last(e.content.getContent())}else null!==e&&this.deletes(e)?(i="update",s=array__namespace.last(e.content.getContent())):(i="add",s=void 0)}else{if(!this.deletes(r))return;i="delete",s=array__namespace.last(r.content.getContent())}e.set(n,{action:i,oldValue:s})}})),this._keys=e}return this._keys}get delta(){return this.changes.delta}adds(e){return e.id.clock>=(this.transaction.beforeState.get(e.id.client)||0)}get changes(){let e=this._changes;if(null===e){const t=this.target,n=set__namespace.create(),r=set__namespace.create(),i=[];e={added:n,deleted:r,delta:i,keys:this.keys};if(this.transaction.changed.get(t).has(null)){let e=null;const s=()=>{e&&i.push(e)};for(let i=t._start;null!==i;i=i.right)i.deleted?this.deletes(i)&&!this.adds(i)&&(null!==e&&void 0!==e.delete||(s(),e={delete:0}),e.delete+=i.length,r.add(i)):this.adds(i)?(null!==e&&void 0!==e.insert||(s(),e={insert:[]}),e.insert=e.insert.concat(i.content.getContent()),n.add(i)):(null!==e&&void 0!==e.retain||(s(),e={retain:0}),e.retain+=i.length);null!==e&&void 0===e.retain&&s()}this._changes=e}return e}}const getPathTo=(e,t)=>{const n=[];for(;null!==t._item&&t!==e;){if(null!==t._item.parentSub)n.unshift(t._item.parentSub);else{let e=0,r=t._item.parent._start;for(;r!==t._item&&null!==r;)r.deleted||e++,r=r.right;n.unshift(e)}t=t._item.parent}return n},maxSearchMarker=80;let globalSearchMarkerTimestamp=0;class ArraySearchMarker{constructor(e,t){e.marker=!0,this.p=e,this.index=t,this.timestamp=globalSearchMarkerTimestamp++}}const refreshMarkerTimestamp=e=>{e.timestamp=globalSearchMarkerTimestamp++},overwriteMarker=(e,t,n)=>{e.p.marker=!1,e.p=t,t.marker=!0,e.index=n,e.timestamp=globalSearchMarkerTimestamp++},markPosition=(e,t,n)=>{if(e.length>=80){const r=e.reduce(((e,t)=>e.timestamp<t.timestamp?e:t));return overwriteMarker(r,t,n),r}{const r=new ArraySearchMarker(t,n);return e.push(r),r}},findMarker=(e,t)=>{if(null===e._start||0===t||null===e._searchMarker)return null;const n=0===e._searchMarker.length?null:e._searchMarker.reduce(((e,n)=>math__namespace.abs(t-e.index)<math__namespace.abs(t-n.index)?e:n));let r=e._start,i=0;for(null!==n&&(r=n.p,i=n.index,refreshMarkerTimestamp(n));null!==r.right&&i<t;){if(!r.deleted&&r.countable){if(t<i+r.length)break;i+=r.length}r=r.right}for(;null!==r.left&&i>t;)r=r.left,!r.deleted&&r.countable&&(i-=r.length);for(;null!==r.left&&r.left.id.client===r.id.client&&r.left.id.clock+r.left.length===r.id.clock;)r=r.left,!r.deleted&&r.countable&&(i-=r.length);return null!==n&&math__namespace.abs(n.index-i)<r.parent.length/80?(overwriteMarker(n,r,i),n):markPosition(e._searchMarker,r,i)},updateMarkerChanges=(e,t,n)=>{for(let r=e.length-1;r>=0;r--){const i=e[r];if(n>0){let t=i.p;for(t.marker=!1;t&&(t.deleted||!t.countable);)t=t.left,t&&!t.deleted&&t.countable&&(i.index-=t.length);if(null===t||!0===t.marker){e.splice(r,1);continue}i.p=t,t.marker=!0}(t<i.index||n>0&&t===i.index)&&(i.index=math__namespace.max(t,i.index+n))}},getTypeChildren=e=>{let t=e._start;const n=[];for(;t;)n.push(t),t=t.right;return n},callTypeObservers=(e,t,n)=>{const r=e,i=t.changedParentTypes;for(;map__namespace.setIfUndefined(i,e,(()=>[])).push(n),null!==e._item;)e=e._item.parent;callEventHandlerListeners(r._eH,n,t)};class AbstractType{constructor(){this._item=null,this._map=new Map,this._start=null,this.doc=null,this._length=0,this._eH=createEventHandler(),this._dEH=createEventHandler(),this._searchMarker=null}get parent(){return this._item?this._item.parent:null}_integrate(e,t){this.doc=e,this._item=t}_copy(){throw error__namespace.methodUnimplemented()}clone(){throw error__namespace.methodUnimplemented()}_write(e){}get _first(){let e=this._start;for(;null!==e&&e.deleted;)e=e.right;return e}_callObserver(e,t){!e.local&&this._searchMarker&&(this._searchMarker.length=0)}observe(e){addEventHandlerListener(this._eH,e)}observeDeep(e){addEventHandlerListener(this._dEH,e)}unobserve(e){removeEventHandlerListener(this._eH,e)}unobserveDeep(e){removeEventHandlerListener(this._dEH,e)}toJSON(){}}const typeListSlice=(e,t,n)=>{t<0&&(t=e._length+t),n<0&&(n=e._length+n);let r=n-t;const i=[];let s=e._start;for(;null!==s&&r>0;){if(s.countable&&!s.deleted){const e=s.content.getContent();if(e.length<=t)t-=e.length;else{for(let n=t;n<e.length&&r>0;n++)i.push(e[n]),r--;t=0}}s=s.right}return i},typeListToArray=e=>{const t=[];let n=e._start;for(;null!==n;){if(n.countable&&!n.deleted){const e=n.content.getContent();for(let n=0;n<e.length;n++)t.push(e[n])}n=n.right}return t},typeListToArraySnapshot=(e,t)=>{const n=[];let r=e._start;for(;null!==r;){if(r.countable&&isVisible(r,t)){const e=r.content.getContent();for(let t=0;t<e.length;t++)n.push(e[t])}r=r.right}return n},typeListForEach=(e,t)=>{let n=0,r=e._start;for(;null!==r;){if(r.countable&&!r.deleted){const i=r.content.getContent();for(let r=0;r<i.length;r++)t(i[r],n++,e)}r=r.right}},typeListMap=(e,t)=>{const n=[];return typeListForEach(e,((r,i)=>{n.push(t(r,i,e))})),n},typeListCreateIterator=e=>{let t=e._start,n=null,r=0;return{[Symbol.iterator](){return this},next:()=>{if(null===n){for(;null!==t&&t.deleted;)t=t.right;if(null===t)return{done:!0,value:void 0};n=t.content.getContent(),r=0,t=t.right}const e=n[r++];return n.length<=r&&(n=null),{done:!1,value:e}}}},typeListGet=(e,t)=>{const n=findMarker(e,t);let r=e._start;for(null!==n&&(r=n.p,t-=n.index);null!==r;r=r.right)if(!r.deleted&&r.countable){if(t<r.length)return r.content.getContent()[t];t-=r.length}},typeListInsertGenericsAfter=(e,t,n,r)=>{let i=n;const s=e.doc,a=s.clientID,o=s.store,c=null===n?t._start:n.right;let l=[];const d=()=>{l.length>0&&(i=new Item(createID(a,getState(o,a)),i,i&&i.lastId,c,c&&c.id,t,null,new ContentAny(l)),i.integrate(e,0),l=[])};r.forEach((n=>{if(null===n)l.push(n);else switch(n.constructor){case Number:case Object:case Boolean:case Array:case String:l.push(n);break;default:switch(d(),n.constructor){case Uint8Array:case ArrayBuffer:i=new Item(createID(a,getState(o,a)),i,i&&i.lastId,c,c&&c.id,t,null,new ContentBinary(new Uint8Array(n))),i.integrate(e,0);break;case Doc:i=new Item(createID(a,getState(o,a)),i,i&&i.lastId,c,c&&c.id,t,null,new ContentDoc(n)),i.integrate(e,0);break;default:if(!(n instanceof AbstractType))throw new Error("Unexpected content type in insert operation");i=new Item(createID(a,getState(o,a)),i,i&&i.lastId,c,c&&c.id,t,null,new ContentType(n)),i.integrate(e,0)}}})),d()},lengthExceeded=error__namespace.create("Length exceeded!"),typeListInsertGenerics=(e,t,n,r)=>{if(n>t._length)throw lengthExceeded;if(0===n)return t._searchMarker&&updateMarkerChanges(t._searchMarker,n,r.length),typeListInsertGenericsAfter(e,t,null,r);const i=n,s=findMarker(t,n);let a=t._start;for(null!==s&&(a=s.p,0===(n-=s.index)&&(a=a.prev,n+=a&&a.countable&&!a.deleted?a.length:0));null!==a;a=a.right)if(!a.deleted&&a.countable){if(n<=a.length){n<a.length&&getItemCleanStart(e,createID(a.id.client,a.id.clock+n));break}n-=a.length}return t._searchMarker&&updateMarkerChanges(t._searchMarker,i,r.length),typeListInsertGenericsAfter(e,t,a,r)},typeListPushGenerics=(e,t,n)=>{let r=(t._searchMarker||[]).reduce(((e,t)=>t.index>e.index?t:e),{index:0,p:t._start}).p;if(r)for(;r.right;)r=r.right;return typeListInsertGenericsAfter(e,t,r,n)},typeListDelete=(e,t,n,r)=>{if(0===r)return;const i=n,s=r,a=findMarker(t,n);let o=t._start;for(null!==a&&(o=a.p,n-=a.index);null!==o&&n>0;o=o.right)!o.deleted&&o.countable&&(n<o.length&&getItemCleanStart(e,createID(o.id.client,o.id.clock+n)),n-=o.length);for(;r>0&&null!==o;)o.deleted||(r<o.length&&getItemCleanStart(e,createID(o.id.client,o.id.clock+r)),o.delete(e),r-=o.length),o=o.right;if(r>0)throw lengthExceeded;t._searchMarker&&updateMarkerChanges(t._searchMarker,i,-s+r)},typeMapDelete=(e,t,n)=>{const r=t._map.get(n);void 0!==r&&r.delete(e)},typeMapSet=(e,t,n,r)=>{const i=t._map.get(n)||null,s=e.doc,a=s.clientID;let o;if(null==r)o=new ContentAny([r]);else switch(r.constructor){case Number:case Object:case Boolean:case Array:case String:o=new ContentAny([r]);break;case Uint8Array:o=new ContentBinary(r);break;case Doc:o=new ContentDoc(r);break;default:if(!(r instanceof AbstractType))throw new Error("Unexpected content type");o=new ContentType(r)}new Item(createID(a,getState(s.store,a)),i,i&&i.lastId,null,null,t,n,o).integrate(e,0)},typeMapGet=(e,t)=>{const n=e._map.get(t);return void 0===n||n.deleted?void 0:n.content.getContent()[n.length-1]},typeMapGetAll=e=>{const t={};return e._map.forEach(((e,n)=>{e.deleted||(t[n]=e.content.getContent()[e.length-1])})),t},typeMapHas=(e,t)=>{const n=e._map.get(t);return void 0!==n&&!n.deleted},typeMapGetSnapshot=(e,t,n)=>{let r=e._map.get(t)||null;for(;null!==r&&(!n.sv.has(r.id.client)||r.id.clock>=(n.sv.get(r.id.client)||0));)r=r.left;return null!==r&&isVisible(r,n)?r.content.getContent()[r.length-1]:void 0},createMapIterator=e=>iterator__namespace.iteratorFilter(e.entries(),(e=>!e[1].deleted));class YArrayEvent extends YEvent{constructor(e,t){super(e,t),this._transaction=t}}class YArray extends AbstractType{constructor(){super(),this._prelimContent=[],this._searchMarker=[]}static from(e){const t=new YArray;return t.push(e),t}_integrate(e,t){super._integrate(e,t),this.insert(0,this._prelimContent),this._prelimContent=null}_copy(){return new YArray}clone(){const e=new YArray;return e.insert(0,this.toArray().map((e=>e instanceof AbstractType?e.clone():e))),e}get length(){return null===this._prelimContent?this._length:this._prelimContent.length}_callObserver(e,t){super._callObserver(e,t),callTypeObservers(this,e,new YArrayEvent(this,e))}insert(e,t){null!==this.doc?transact(this.doc,(n=>{typeListInsertGenerics(n,this,e,t)})):this._prelimContent.splice(e,0,...t)}push(e){null!==this.doc?transact(this.doc,(t=>{typeListPushGenerics(t,this,e)})):this._prelimContent.push(...e)}unshift(e){this.insert(0,e)}delete(e,t=1){null!==this.doc?transact(this.doc,(n=>{typeListDelete(n,this,e,t)})):this._prelimContent.splice(e,t)}get(e){return typeListGet(this,e)}toArray(){return typeListToArray(this)}slice(e=0,t=this.length){return typeListSlice(this,e,t)}toJSON(){return this.map((e=>e instanceof AbstractType?e.toJSON():e))}map(e){return typeListMap(this,e)}forEach(e){typeListForEach(this,e)}[Symbol.iterator](){return typeListCreateIterator(this)}_write(e){e.writeTypeRef(YArrayRefID)}}const readYArray=e=>new YArray;class YMapEvent extends YEvent{constructor(e,t,n){super(e,t),this.keysChanged=n}}class YMap extends AbstractType{constructor(e){super(),this._prelimContent=null,this._prelimContent=void 0===e?new Map:new Map(e)}_integrate(e,t){super._integrate(e,t),this._prelimContent.forEach(((e,t)=>{this.set(t,e)})),this._prelimContent=null}_copy(){return new YMap}clone(){const e=new YMap;return this.forEach(((t,n)=>{e.set(n,t instanceof AbstractType?t.clone():t)})),e}_callObserver(e,t){callTypeObservers(this,e,new YMapEvent(this,e,t))}toJSON(){const e={};return this._map.forEach(((t,n)=>{if(!t.deleted){const r=t.content.getContent()[t.length-1];e[n]=r instanceof AbstractType?r.toJSON():r}})),e}get size(){return[...createMapIterator(this._map)].length}keys(){return iterator__namespace.iteratorMap(createMapIterator(this._map),(e=>e[0]))}values(){return iterator__namespace.iteratorMap(createMapIterator(this._map),(e=>e[1].content.getContent()[e[1].length-1]))}entries(){return iterator__namespace.iteratorMap(createMapIterator(this._map),(e=>[e[0],e[1].content.getContent()[e[1].length-1]]))}forEach(e){return this._map.forEach(((t,n)=>{t.deleted||e(t.content.getContent()[t.length-1],n,this)})),{}}[Symbol.iterator](){return this.entries()}delete(e){null!==this.doc?transact(this.doc,(t=>{typeMapDelete(t,this,e)})):this._prelimContent.delete(e)}set(e,t){return null!==this.doc?transact(this.doc,(n=>{typeMapSet(n,this,e,t)})):this._prelimContent.set(e,t),t}get(e){return typeMapGet(this,e)}has(e){return typeMapHas(this,e)}clear(){null!==this.doc?transact(this.doc,(e=>{this.forEach((function(t,n,r){typeMapDelete(e,r,n)}))})):this._prelimContent.clear()}_write(e){e.writeTypeRef(YMapRefID)}}const readYMap=e=>new YMap,equalAttrs=(e,t)=>e===t||"object"===typeof e&&"object"===typeof t&&e&&t&&object__namespace.equalFlat(e,t);class ItemTextListPosition{constructor(e,t,n,r){this.left=e,this.right=t,this.index=n,this.currentAttributes=r}forward(){if(null===this.right&&error__namespace.unexpectedCase(),this.right.content.constructor===ContentFormat)this.right.deleted||updateCurrentAttributes(this.currentAttributes,this.right.content);else this.right.deleted||(this.index+=this.right.length);this.left=this.right,this.right=this.right.right}}const findNextPosition=(e,t,n)=>{for(;null!==t.right&&n>0;){if(t.right.content.constructor===ContentFormat)t.right.deleted||updateCurrentAttributes(t.currentAttributes,t.right.content);else t.right.deleted||(n<t.right.length&&getItemCleanStart(e,createID(t.right.id.client,t.right.id.clock+n)),t.index+=t.right.length,n-=t.right.length);t.left=t.right,t.right=t.right.right}return t},findPosition=(e,t,n)=>{const r=new Map,i=findMarker(t,n);if(i){const t=new ItemTextListPosition(i.p.left,i.p,i.index,r);return findNextPosition(e,t,n-i.index)}{const i=new ItemTextListPosition(null,t._start,0,r);return findNextPosition(e,i,n)}},insertNegatedAttributes=(e,t,n,r)=>{for(;null!==n.right&&(!0===n.right.deleted||n.right.content.constructor===ContentFormat&&equalAttrs(r.get(n.right.content.key),n.right.content.value));)n.right.deleted||r.delete(n.right.content.key),n.forward();const i=e.doc,s=i.clientID;r.forEach(((r,a)=>{const o=n.left,c=n.right,l=new Item(createID(s,getState(i.store,s)),o,o&&o.lastId,c,c&&c.id,t,null,new ContentFormat(a,r));l.integrate(e,0),n.right=l,n.forward()}))},updateCurrentAttributes=(e,t)=>{const{key:n,value:r}=t;null===r?e.delete(n):e.set(n,r)},minimizeAttributeChanges=(e,t)=>{for(;null!==e.right&&(e.right.deleted||e.right.content.constructor===ContentFormat&&equalAttrs(t[e.right.content.key]||null,e.right.content.value));)e.forward()},insertAttributes=(e,t,n,r)=>{const i=e.doc,s=i.clientID,a=new Map;for(const o in r){const c=r[o],l=n.currentAttributes.get(o)||null;if(!equalAttrs(l,c)){a.set(o,l);const{left:r,right:d}=n;n.right=new Item(createID(s,getState(i.store,s)),r,r&&r.lastId,d,d&&d.id,t,null,new ContentFormat(o,c)),n.right.integrate(e,0),n.forward()}}return a},insertText=(e,t,n,r,i)=>{n.currentAttributes.forEach(((e,t)=>{void 0===i[t]&&(i[t]=null)}));const s=e.doc,a=s.clientID;minimizeAttributeChanges(n,i);const o=insertAttributes(e,t,n,i),c=r.constructor===String?new ContentString(r):r instanceof AbstractType?new ContentType(r):new ContentEmbed(r);let{left:l,right:d,index:h}=n;t._searchMarker&&updateMarkerChanges(t._searchMarker,n.index,c.getLength()),d=new Item(createID(a,getState(s.store,a)),l,l&&l.lastId,d,d&&d.id,t,null,c),d.integrate(e,0),n.right=d,n.index=h,n.forward(),insertNegatedAttributes(e,t,n,o)},formatText=(e,t,n,r,i)=>{const s=e.doc,a=s.clientID;minimizeAttributeChanges(n,i);const o=insertAttributes(e,t,n,i);e:for(;null!==n.right&&(r>0||o.size>0&&(n.right.deleted||n.right.content.constructor===ContentFormat));){if(!n.right.deleted)switch(n.right.content.constructor){case ContentFormat:{const{key:t,value:s}=n.right.content,a=i[t];if(void 0!==a){if(equalAttrs(a,s))o.delete(t);else{if(0===r)break e;o.set(t,s)}n.right.delete(e)}else n.currentAttributes.set(t,s);break}default:r<n.right.length&&getItemCleanStart(e,createID(n.right.id.client,n.right.id.clock+r)),r-=n.right.length}n.forward()}if(r>0){let i="";for(;r>0;r--)i+="\n";n.right=new Item(createID(a,getState(s.store,a)),n.left,n.left&&n.left.lastId,n.right,n.right&&n.right.id,t,null,new ContentString(i)),n.right.integrate(e,0),n.forward()}insertNegatedAttributes(e,t,n,o)},cleanupFormattingGap=(e,t,n,r,i)=>{let s=n;const a=map__namespace.copy(i);for(;s&&(!s.countable||s.deleted);)s.deleted||s.content.constructor!==ContentFormat||updateCurrentAttributes(a,s.content),s=s.right;let o=0,c=!1;for(;t!==s;){if(n===t&&(c=!0),!t.deleted){const n=t.content;switch(n.constructor){case ContentFormat:{const{key:s,value:l}=n;(a.get(s)||null)===l&&(r.get(s)||null)!==l||(t.delete(e),o++,c||(i.get(s)||null)!==l||(r.get(s)||null)===l||i.delete(s));break}}}t=t.right}return o},cleanupContextlessFormattingGap=(e,t)=>{for(;t&&t.right&&(t.right.deleted||!t.right.countable);)t=t.right;const n=new Set;for(;t&&(t.deleted||!t.countable);){if(!t.deleted&&t.content.constructor===ContentFormat){const r=t.content.key;n.has(r)?t.delete(e):n.add(r)}t=t.left}},cleanupYTextFormatting=e=>{let t=0;return transact(e.doc,(n=>{let r=e._start,i=e._start,s=map__namespace.create();const a=map__namespace.copy(s);for(;i;){if(!1===i.deleted)if(i.content.constructor===ContentFormat)updateCurrentAttributes(a,i.content);else t+=cleanupFormattingGap(n,r,i,s,a),s=map__namespace.copy(a),r=i;i=i.right}})),t},deleteText=(e,t,n)=>{const r=n,i=map__namespace.copy(t.currentAttributes),s=t.right;for(;n>0&&null!==t.right;){if(!1===t.right.deleted)switch(t.right.content.constructor){case ContentType:case ContentEmbed:case ContentString:n<t.right.length&&getItemCleanStart(e,createID(t.right.id.client,t.right.id.clock+n)),n-=t.right.length,t.right.delete(e)}t.forward()}s&&cleanupFormattingGap(e,s,t.right,i,t.currentAttributes);const a=(t.left||t.right).parent;return a._searchMarker&&updateMarkerChanges(a._searchMarker,t.index,-r+n),t};class YTextEvent extends YEvent{constructor(e,t,n){super(e,t),this.childListChanged=!1,this.keysChanged=new Set,n.forEach((e=>{null===e?this.childListChanged=!0:this.keysChanged.add(e)}))}get changes(){if(null===this._changes){const e={keys:this.keys,delta:this.delta,added:new Set,deleted:new Set};this._changes=e}return this._changes}get delta(){if(null===this._delta){const e=this.target.doc,t=[];transact(e,(e=>{const n=new Map,r=new Map;let i=this.target._start,s=null;const a={};let o="",c=0,l=0;const d=()=>{if(null!==s){let e;switch(s){case"delete":e={delete:l},l=0;break;case"insert":e={insert:o},n.size>0&&(e.attributes={},n.forEach(((t,n)=>{null!==t&&(e.attributes[n]=t)}))),o="";break;case"retain":if(e={retain:c},Object.keys(a).length>0){e.attributes={};for(const t in a)e.attributes[t]=a[t]}c=0}t.push(e),s=null}};for(;null!==i;){switch(i.content.constructor){case ContentType:case ContentEmbed:this.adds(i)?this.deletes(i)||(d(),s="insert",o=i.content.getContent()[0],d()):this.deletes(i)?("delete"!==s&&(d(),s="delete"),l+=1):i.deleted||("retain"!==s&&(d(),s="retain"),c+=1);break;case ContentString:this.adds(i)?this.deletes(i)||("insert"!==s&&(d(),s="insert"),o+=i.content.str):this.deletes(i)?("delete"!==s&&(d(),s="delete"),l+=i.length):i.deleted||("retain"!==s&&(d(),s="retain"),c+=i.length);break;case ContentFormat:{const{key:t,value:o}=i.content;if(this.adds(i)){if(!this.deletes(i)){const c=n.get(t)||null;equalAttrs(c,o)?null!==o&&i.delete(e):("retain"===s&&d(),equalAttrs(o,r.get(t)||null)?delete a[t]:a[t]=o)}}else if(this.deletes(i)){r.set(t,o);const e=n.get(t)||null;equalAttrs(e,o)||("retain"===s&&d(),a[t]=e)}else if(!i.deleted){r.set(t,o);const n=a[t];void 0!==n&&(equalAttrs(n,o)?null!==n&&i.delete(e):("retain"===s&&d(),null===o?delete a[t]:a[t]=o))}i.deleted||("insert"===s&&d(),updateCurrentAttributes(n,i.content));break}}i=i.right}for(d();t.length>0;){const e=t[t.length-1];if(void 0===e.retain||void 0!==e.attributes)break;t.pop()}})),this._delta=t}return this._delta}}class YText extends AbstractType{constructor(e){super(),this._pending=void 0!==e?[()=>this.insert(0,e)]:[],this._searchMarker=[]}get length(){return this._length}_integrate(e,t){super._integrate(e,t);try{this._pending.forEach((e=>e()))}catch(n){console.error(n)}this._pending=null}_copy(){return new YText}clone(){const e=new YText;return e.applyDelta(this.toDelta()),e}_callObserver(e,t){super._callObserver(e,t);const n=new YTextEvent(this,e,t),r=e.doc;if(callTypeObservers(this,e,n),!e.local){let t=!1;for(const[n,i]of e.afterState.entries()){const s=e.beforeState.get(n)||0;if(i!==s&&(iterateStructs(e,r.store.clients.get(n),s,i,(e=>{e.deleted||e.content.constructor!==ContentFormat||(t=!0)})),t))break}t||iterateDeletedStructs(e,e.deleteSet,(e=>{e instanceof GC||t||e.parent===this&&e.content.constructor===ContentFormat&&(t=!0)})),transact(r,(e=>{t?cleanupYTextFormatting(this):iterateDeletedStructs(e,e.deleteSet,(t=>{t instanceof GC||t.parent===this&&cleanupContextlessFormattingGap(e,t)}))}))}}toString(){let e="",t=this._start;for(;null!==t;)!t.deleted&&t.countable&&t.content.constructor===ContentString&&(e+=t.content.str),t=t.right;return e}toJSON(){return this.toString()}applyDelta(e,{sanitize:t=!0}={}){null!==this.doc?transact(this.doc,(n=>{const r=new ItemTextListPosition(null,this._start,0,new Map);for(let i=0;i<e.length;i++){const s=e[i];if(void 0!==s.insert){const a=t||"string"!==typeof s.insert||i!==e.length-1||null!==r.right||"\n"!==s.insert.slice(-1)?s.insert:s.insert.slice(0,-1);("string"!==typeof a||a.length>0)&&insertText(n,this,r,a,s.attributes||{})}else void 0!==s.retain?formatText(n,this,r,s.retain,s.attributes||{}):void 0!==s.delete&&deleteText(n,r,s.delete)}})):this._pending.push((()=>this.applyDelta(e)))}toDelta(e,t,n){const r=[],i=new Map,s=this.doc;let a="",o=this._start;function c(){if(a.length>0){const e={};let t=!1;i.forEach(((n,r)=>{t=!0,e[r]=n}));const n={insert:a};t&&(n.attributes=e),r.push(n),a=""}}return transact(s,(s=>{for(e&&splitSnapshotAffectedStructs(s,e),t&&splitSnapshotAffectedStructs(s,t);null!==o;){if(isVisible(o,e)||void 0!==t&&isVisible(o,t))switch(o.content.constructor){case ContentString:{const r=i.get("ychange");void 0===e||isVisible(o,e)?void 0===t||isVisible(o,t)?void 0!==r&&(c(),i.delete("ychange")):void 0!==r&&r.user===o.id.client&&"added"===r.state||(c(),i.set("ychange",n?n("added",o.id):{type:"added"})):void 0!==r&&r.user===o.id.client&&"removed"===r.state||(c(),i.set("ychange",n?n("removed",o.id):{type:"removed"})),a+=o.content.str;break}case ContentType:case ContentEmbed:{c();const e={insert:o.content.getContent()[0]};if(i.size>0){const t={};e.attributes=t,i.forEach(((e,n)=>{t[n]=e}))}r.push(e);break}case ContentFormat:isVisible(o,e)&&(c(),updateCurrentAttributes(i,o.content))}o=o.right}c()}),splitSnapshotAffectedStructs),r}insert(e,t,n){if(t.length<=0)return;const r=this.doc;null!==r?transact(r,(r=>{const i=findPosition(r,this,e);n||(n={},i.currentAttributes.forEach(((e,t)=>{n[t]=e}))),insertText(r,this,i,t,n)})):this._pending.push((()=>this.insert(e,t,n)))}insertEmbed(e,t,n={}){const r=this.doc;null!==r?transact(r,(r=>{const i=findPosition(r,this,e);insertText(r,this,i,t,n)})):this._pending.push((()=>this.insertEmbed(e,t,n)))}delete(e,t){if(0===t)return;const n=this.doc;null!==n?transact(n,(n=>{deleteText(n,findPosition(n,this,e),t)})):this._pending.push((()=>this.delete(e,t)))}format(e,t,n){if(0===t)return;const r=this.doc;null!==r?transact(r,(r=>{const i=findPosition(r,this,e);null!==i.right&&formatText(r,this,i,t,n)})):this._pending.push((()=>this.format(e,t,n)))}removeAttribute(e){null!==this.doc?transact(this.doc,(t=>{typeMapDelete(t,this,e)})):this._pending.push((()=>this.removeAttribute(e)))}setAttribute(e,t){null!==this.doc?transact(this.doc,(n=>{typeMapSet(n,this,e,t)})):this._pending.push((()=>this.setAttribute(e,t)))}getAttribute(e){return typeMapGet(this,e)}getAttributes(e){return typeMapGetAll(this)}_write(e){e.writeTypeRef(YTextRefID)}}const readYText=e=>new YText;class YXmlTreeWalker{constructor(e,t=(()=>!0)){this._filter=t,this._root=e,this._currentNode=e._start,this._firstCall=!0}[Symbol.iterator](){return this}next(){let e=this._currentNode,t=e&&e.content&&e.content.type;if(null!==e&&(!this._firstCall||e.deleted||!this._filter(t)))do{if(t=e.content.type,e.deleted||t.constructor!==YXmlElement&&t.constructor!==YXmlFragment||null===t._start)for(;null!==e;){if(null!==e.right){e=e.right;break}e=e.parent===this._root?null:e.parent._item}else e=t._start}while(null!==e&&(e.deleted||!this._filter(e.content.type)));return this._firstCall=!1,null===e?{value:void 0,done:!0}:(this._currentNode=e,{value:e.content.type,done:!1})}}class YXmlFragment extends AbstractType{constructor(){super(),this._prelimContent=[]}get firstChild(){const e=this._first;return e?e.content.getContent()[0]:null}_integrate(e,t){super._integrate(e,t),this.insert(0,this._prelimContent),this._prelimContent=null}_copy(){return new YXmlFragment}clone(){const e=new YXmlFragment;return e.insert(0,this.toArray().map((e=>e instanceof AbstractType?e.clone():e))),e}get length(){return null===this._prelimContent?this._length:this._prelimContent.length}createTreeWalker(e){return new YXmlTreeWalker(this,e)}querySelector(e){e=e.toUpperCase();const t=new YXmlTreeWalker(this,(t=>t.nodeName&&t.nodeName.toUpperCase()===e)).next();return t.done?null:t.value}querySelectorAll(e){return e=e.toUpperCase(),Array.from(new YXmlTreeWalker(this,(t=>t.nodeName&&t.nodeName.toUpperCase()===e)))}_callObserver(e,t){callTypeObservers(this,e,new YXmlEvent(this,t,e))}toString(){return typeListMap(this,(e=>e.toString())).join("")}toJSON(){return this.toString()}toDOM(e=document,t={},n){const r=e.createDocumentFragment();return void 0!==n&&n._createAssociation(r,this),typeListForEach(this,(i=>{r.insertBefore(i.toDOM(e,t,n),null)})),r}insert(e,t){null!==this.doc?transact(this.doc,(n=>{typeListInsertGenerics(n,this,e,t)})):this._prelimContent.splice(e,0,...t)}insertAfter(e,t){if(null!==this.doc)transact(this.doc,(n=>{const r=e&&e instanceof AbstractType?e._item:e;typeListInsertGenericsAfter(n,this,r,t)}));else{const n=this._prelimContent,r=null===e?0:n.findIndex((t=>t===e))+1;if(0===r&&null!==e)throw error__namespace.create("Reference item not found");n.splice(r,0,...t)}}delete(e,t=1){null!==this.doc?transact(this.doc,(n=>{typeListDelete(n,this,e,t)})):this._prelimContent.splice(e,t)}toArray(){return typeListToArray(this)}push(e){this.insert(this.length,e)}unshift(e){this.insert(0,e)}get(e){return typeListGet(this,e)}slice(e=0,t=this.length){return typeListSlice(this,e,t)}forEach(e){typeListForEach(this,e)}_write(e){e.writeTypeRef(YXmlFragmentRefID)}}const readYXmlFragment=e=>new YXmlFragment;class YXmlElement extends YXmlFragment{constructor(e="UNDEFINED"){super(),this.nodeName=e,this._prelimAttrs=new Map}get nextSibling(){const e=this._item?this._item.next:null;return e?e.content.type:null}get prevSibling(){const e=this._item?this._item.prev:null;return e?e.content.type:null}_integrate(e,t){super._integrate(e,t),this._prelimAttrs.forEach(((e,t)=>{this.setAttribute(t,e)})),this._prelimAttrs=null}_copy(){return new YXmlElement(this.nodeName)}clone(){const e=new YXmlElement(this.nodeName),t=this.getAttributes();for(const n in t)e.setAttribute(n,t[n]);return e.insert(0,this.toArray().map((e=>e instanceof AbstractType?e.clone():e))),e}toString(){const e=this.getAttributes(),t=[],n=[];for(const s in e)n.push(s);n.sort();const r=n.length;for(let s=0;s<r;s++){const r=n[s];t.push(r+'="'+e[r]+'"')}const i=this.nodeName.toLocaleLowerCase();return`<${i}${t.length>0?" "+t.join(" "):""}>${super.toString()}</${i}>`}removeAttribute(e){null!==this.doc?transact(this.doc,(t=>{typeMapDelete(t,this,e)})):this._prelimAttrs.delete(e)}setAttribute(e,t){null!==this.doc?transact(this.doc,(n=>{typeMapSet(n,this,e,t)})):this._prelimAttrs.set(e,t)}getAttribute(e){return typeMapGet(this,e)}hasAttribute(e){return typeMapHas(this,e)}getAttributes(e){return typeMapGetAll(this)}toDOM(e=document,t={},n){const r=e.createElement(this.nodeName),i=this.getAttributes();for(const s in i)r.setAttribute(s,i[s]);return typeListForEach(this,(i=>{r.appendChild(i.toDOM(e,t,n))})),void 0!==n&&n._createAssociation(r,this),r}_write(e){e.writeTypeRef(YXmlElementRefID),e.writeKey(this.nodeName)}}const readYXmlElement=e=>new YXmlElement(e.readKey());class YXmlEvent extends YEvent{constructor(e,t,n){super(e,n),this.childListChanged=!1,this.attributesChanged=new Set,t.forEach((e=>{null===e?this.childListChanged=!0:this.attributesChanged.add(e)}))}}class YXmlHook extends YMap{constructor(e){super(),this.hookName=e}_copy(){return new YXmlHook(this.hookName)}clone(){const e=new YXmlHook(this.hookName);return this.forEach(((t,n)=>{e.set(n,t)})),e}toDOM(e=document,t={},n){const r=t[this.hookName];let i;return i=void 0!==r?r.createDom(this):document.createElement(this.hookName),i.setAttribute("data-yjs-hook",this.hookName),void 0!==n&&n._createAssociation(i,this),i}_write(e){e.writeTypeRef(YXmlHookRefID),e.writeKey(this.hookName)}}const readYXmlHook=e=>new YXmlHook(e.readKey());class YXmlText extends YText{get nextSibling(){const e=this._item?this._item.next:null;return e?e.content.type:null}get prevSibling(){const e=this._item?this._item.prev:null;return e?e.content.type:null}_copy(){return new YXmlText}clone(){const e=new YXmlText;return e.applyDelta(this.toDelta()),e}toDOM(e=document,t,n){const r=e.createTextNode(this.toString());return void 0!==n&&n._createAssociation(r,this),r}toString(){return this.toDelta().map((e=>{const t=[];for(const r in e.attributes){const n=[];for(const t in e.attributes[r])n.push({key:t,value:e.attributes[r][t]});n.sort(((e,t)=>e.key<t.key?-1:1)),t.push({nodeName:r,attrs:n})}t.sort(((e,t)=>e.nodeName<t.nodeName?-1:1));let n="";for(let r=0;r<t.length;r++){const e=t[r];n+=`<${e.nodeName}`;for(let t=0;t<e.attrs.length;t++){const r=e.attrs[t];n+=` ${r.key}="${r.value}"`}n+=">"}n+=e.insert;for(let r=t.length-1;r>=0;r--)n+=`</${t[r].nodeName}>`;return n})).join("")}toJSON(){return this.toString()}_write(e){e.writeTypeRef(YXmlTextRefID)}}const readYXmlText=e=>new YXmlText;class AbstractStruct{constructor(e,t){this.id=e,this.length=t}get deleted(){throw error__namespace.methodUnimplemented()}mergeWith(e){return!1}write(e,t,n){throw error__namespace.methodUnimplemented()}integrate(e,t){throw error__namespace.methodUnimplemented()}}const structGCRefNumber=0;class GC extends AbstractStruct{get deleted(){return!0}delete(){}mergeWith(e){return this.constructor===e.constructor&&(this.length+=e.length,!0)}integrate(e,t){t>0&&(this.id.clock+=t,this.length-=t),addStruct(e.doc.store,this)}write(e,t){e.writeInfo(0),e.writeLen(this.length-t)}getMissing(e,t){return null}}class ContentBinary{constructor(e){this.content=e}getLength(){return 1}getContent(){return[this.content]}isCountable(){return!0}copy(){return new ContentBinary(this.content)}splice(e){throw error__namespace.methodUnimplemented()}mergeWith(e){return!1}integrate(e,t){}delete(e){}gc(e){}write(e,t){e.writeBuf(this.content)}getRef(){return 3}}const readContentBinary=e=>new ContentBinary(e.readBuf());class ContentDeleted{constructor(e){this.len=e}getLength(){return this.len}getContent(){return[]}isCountable(){return!1}copy(){return new ContentDeleted(this.len)}splice(e){const t=new ContentDeleted(this.len-e);return this.len=e,t}mergeWith(e){return this.len+=e.len,!0}integrate(e,t){addToDeleteSet(e.deleteSet,t.id.client,t.id.clock,this.len),t.markDeleted()}delete(e){}gc(e){}write(e,t){e.writeLen(this.len-t)}getRef(){return 1}}const readContentDeleted=e=>new ContentDeleted(e.readLen()),createDocFromOpts=(e,t)=>new Doc({guid:e,...t,shouldLoad:t.shouldLoad||t.autoLoad||!1});class ContentDoc{constructor(e){e._item&&console.error("This document was already integrated as a sub-document. You should create a second instance instead with the same guid."),this.doc=e;const t={};this.opts=t,e.gc||(t.gc=!1),e.autoLoad&&(t.autoLoad=!0),null!==e.meta&&(t.meta=e.meta)}getLength(){return 1}getContent(){return[this.doc]}isCountable(){return!0}copy(){return new ContentDoc(createDocFromOpts(this.doc.guid,this.opts))}splice(e){throw error__namespace.methodUnimplemented()}mergeWith(e){return!1}integrate(e,t){this.doc._item=t,e.subdocsAdded.add(this.doc),this.doc.shouldLoad&&e.subdocsLoaded.add(this.doc)}delete(e){e.subdocsAdded.has(this.doc)?e.subdocsAdded.delete(this.doc):e.subdocsRemoved.add(this.doc)}gc(e){}write(e,t){e.writeString(this.doc.guid),e.writeAny(this.opts)}getRef(){return 9}}const readContentDoc=e=>new ContentDoc(createDocFromOpts(e.readString(),e.readAny()));class ContentEmbed{constructor(e){this.embed=e}getLength(){return 1}getContent(){return[this.embed]}isCountable(){return!0}copy(){return new ContentEmbed(this.embed)}splice(e){throw error__namespace.methodUnimplemented()}mergeWith(e){return!1}integrate(e,t){}delete(e){}gc(e){}write(e,t){e.writeJSON(this.embed)}getRef(){return 5}}const readContentEmbed=e=>new ContentEmbed(e.readJSON());class ContentFormat{constructor(e,t){this.key=e,this.value=t}getLength(){return 1}getContent(){return[]}isCountable(){return!1}copy(){return new ContentFormat(this.key,this.value)}splice(e){throw error__namespace.methodUnimplemented()}mergeWith(e){return!1}integrate(e,t){t.parent._searchMarker=null}delete(e){}gc(e){}write(e,t){e.writeKey(this.key),e.writeJSON(this.value)}getRef(){return 6}}const readContentFormat=e=>new ContentFormat(e.readKey(),e.readJSON());class ContentJSON{constructor(e){this.arr=e}getLength(){return this.arr.length}getContent(){return this.arr}isCountable(){return!0}copy(){return new ContentJSON(this.arr)}splice(e){const t=new ContentJSON(this.arr.slice(e));return this.arr=this.arr.slice(0,e),t}mergeWith(e){return this.arr=this.arr.concat(e.arr),!0}integrate(e,t){}delete(e){}gc(e){}write(e,t){const n=this.arr.length;e.writeLen(n-t);for(let r=t;r<n;r++){const t=this.arr[r];e.writeString(void 0===t?"undefined":JSON.stringify(t))}}getRef(){return 2}}const readContentJSON=e=>{const t=e.readLen(),n=[];for(let r=0;r<t;r++){const t=e.readString();"undefined"===t?n.push(void 0):n.push(JSON.parse(t))}return new ContentJSON(n)};class ContentAny{constructor(e){this.arr=e}getLength(){return this.arr.length}getContent(){return this.arr}isCountable(){return!0}copy(){return new ContentAny(this.arr)}splice(e){const t=new ContentAny(this.arr.slice(e));return this.arr=this.arr.slice(0,e),t}mergeWith(e){return this.arr=this.arr.concat(e.arr),!0}integrate(e,t){}delete(e){}gc(e){}write(e,t){const n=this.arr.length;e.writeLen(n-t);for(let r=t;r<n;r++){const t=this.arr[r];e.writeAny(t)}}getRef(){return 8}}const readContentAny=e=>{const t=e.readLen(),n=[];for(let r=0;r<t;r++)n.push(e.readAny());return new ContentAny(n)};class ContentString{constructor(e){this.str=e}getLength(){return this.str.length}getContent(){return this.str.split("")}isCountable(){return!0}copy(){return new ContentString(this.str)}splice(e){const t=new ContentString(this.str.slice(e));this.str=this.str.slice(0,e);const n=this.str.charCodeAt(e-1);return n>=55296&&n<=56319&&(this.str=this.str.slice(0,e-1)+"\ufffd",t.str="\ufffd"+t.str.slice(1)),t}mergeWith(e){return this.str+=e.str,!0}integrate(e,t){}delete(e){}gc(e){}write(e,t){e.writeString(0===t?this.str:this.str.slice(t))}getRef(){return 4}}const readContentString=e=>new ContentString(e.readString()),typeRefs=[readYArray,readYMap,readYText,readYXmlElement,readYXmlFragment,readYXmlHook,readYXmlText],YArrayRefID=0,YMapRefID=1,YTextRefID=2,YXmlElementRefID=3,YXmlFragmentRefID=4,YXmlHookRefID=5,YXmlTextRefID=6;class ContentType{constructor(e){this.type=e}getLength(){return 1}getContent(){return[this.type]}isCountable(){return!0}copy(){return new ContentType(this.type._copy())}splice(e){throw error__namespace.methodUnimplemented()}mergeWith(e){return!1}integrate(e,t){this.type._integrate(e.doc,t)}delete(e){let t=this.type._start;for(;null!==t;)t.deleted?e._mergeStructs.push(t):t.delete(e),t=t.right;this.type._map.forEach((t=>{t.deleted?e._mergeStructs.push(t):t.delete(e)})),e.changed.delete(this.type)}gc(e){let t=this.type._start;for(;null!==t;)t.gc(e,!0),t=t.right;this.type._start=null,this.type._map.forEach((t=>{for(;null!==t;)t.gc(e,!0),t=t.left})),this.type._map=new Map}write(e,t){this.type._write(e)}getRef(){return 7}}const readContentType=e=>new ContentType(typeRefs[e.readTypeRef()](e)),followRedone=(e,t)=>{let n,r=t,i=0;do{i>0&&(r=createID(r.client,r.clock+i)),n=getItem(e,r),i=r.clock-n.id.clock,r=n.redone}while(null!==r&&n instanceof Item);return{item:n,diff:i}},keepItem=(e,t)=>{for(;null!==e&&e.keep!==t;)e.keep=t,e=e.parent._item},splitItem=(e,t,n)=>{const{client:r,clock:i}=t.id,s=new Item(createID(r,i+n),t,createID(r,i+n-1),t.right,t.rightOrigin,t.parent,t.parentSub,t.content.splice(n));return t.deleted&&s.markDeleted(),t.keep&&(s.keep=!0),null!==t.redone&&(s.redone=createID(t.redone.client,t.redone.clock+n)),t.right=s,null!==s.right&&(s.right.left=s),e._mergeStructs.push(s),null!==s.parentSub&&null===s.right&&s.parent._map.set(s.parentSub,s),t.length=n,s},redoItem=(e,t,n,r,i)=>{const s=e.doc,a=s.store,o=s.clientID,c=t.redone;if(null!==c)return getItemCleanStart(e,c);let l,d=t.parent._item,h=null;if(null!==d&&!0===d.deleted){if(null===d.redone&&(!n.has(d)||null===redoItem(e,d,n,r,i)))return null;for(;null!==d.redone;)d=getItemCleanStart(e,d.redone)}const p=null===d?t.parent:d.content.type;if(null===t.parentSub){for(h=t.left,l=t;null!==h;){let t=h;for(;null!==t&&t.parent._item!==d;)t=null===t.redone?null:getItemCleanStart(e,t.redone);if(null!==t&&t.parent._item===d){h=t;break}h=h.left}for(;null!==l;){let t=l;for(;null!==t&&t.parent._item!==d;)t=null===t.redone?null:getItemCleanStart(e,t.redone);if(null!==t&&t.parent._item===d){l=t;break}l=l.right}}else if(l=null,t.right&&!i){for(h=t;null!==h&&null!==h.right&&isDeleted(r,h.right.id);)h=h.right;for(;null!==h&&null!==h.redone;)h=getItemCleanStart(e,h.redone);if(h&&null!==h.right)return null}else h=p._map.get(t.parentSub)||null;const u=getState(a,o),g=createID(o,u),m=new Item(g,h,h&&h.lastId,l,l&&l.id,p,t.parentSub,t.content.copy());return t.redone=g,keepItem(m,!0),m.integrate(e,0),m};class Item extends AbstractStruct{constructor(e,t,n,r,i,s,a,o){super(e,o.getLength()),this.origin=n,this.left=t,this.right=r,this.rightOrigin=i,this.parent=s,this.parentSub=a,this.redone=null,this.content=o,this.info=this.content.isCountable()?binary__namespace.BIT2:0}set marker(e){(this.info&binary__namespace.BIT4)>0!==e&&(this.info^=binary__namespace.BIT4)}get marker(){return(this.info&binary__namespace.BIT4)>0}get keep(){return(this.info&binary__namespace.BIT1)>0}set keep(e){this.keep!==e&&(this.info^=binary__namespace.BIT1)}get countable(){return(this.info&binary__namespace.BIT2)>0}get deleted(){return(this.info&binary__namespace.BIT3)>0}set deleted(e){this.deleted!==e&&(this.info^=binary__namespace.BIT3)}markDeleted(){this.info|=binary__namespace.BIT3}getMissing(e,t){if(this.origin&&this.origin.client!==this.id.client&&this.origin.clock>=getState(t,this.origin.client))return this.origin.client;if(this.rightOrigin&&this.rightOrigin.client!==this.id.client&&this.rightOrigin.clock>=getState(t,this.rightOrigin.client))return this.rightOrigin.client;if(this.parent&&this.parent.constructor===ID&&this.id.client!==this.parent.client&&this.parent.clock>=getState(t,this.parent.client))return this.parent.client;if(this.origin&&(this.left=getItemCleanEnd(e,t,this.origin),this.origin=this.left.lastId),this.rightOrigin&&(this.right=getItemCleanStart(e,this.rightOrigin),this.rightOrigin=this.right.id),(this.left&&this.left.constructor===GC||this.right&&this.right.constructor===GC)&&(this.parent=null),this.parent){if(this.parent.constructor===ID){const e=getItem(t,this.parent);e.constructor===GC?this.parent=null:this.parent=e.content.type}}else this.left&&this.left.constructor===Item&&(this.parent=this.left.parent,this.parentSub=this.left.parentSub),this.right&&this.right.constructor===Item&&(this.parent=this.right.parent,this.parentSub=this.right.parentSub);return null}integrate(e,t){if(t>0&&(this.id.clock+=t,this.left=getItemCleanEnd(e,e.doc.store,createID(this.id.client,this.id.clock-1)),this.origin=this.left.lastId,this.content=this.content.splice(t),this.length-=t),this.parent){if(!this.left&&(!this.right||null!==this.right.left)||this.left&&this.left.right!==this.right){let t,n=this.left;if(null!==n)t=n.right;else if(null!==this.parentSub)for(t=this.parent._map.get(this.parentSub)||null;null!==t&&null!==t.left;)t=t.left;else t=this.parent._start;const r=new Set,i=new Set;for(;null!==t&&t!==this.right;){if(i.add(t),r.add(t),compareIDs(this.origin,t.origin)){if(t.id.client<this.id.client)n=t,r.clear();else if(compareIDs(this.rightOrigin,t.rightOrigin))break}else{if(null===t.origin||!i.has(getItem(e.doc.store,t.origin)))break;r.has(getItem(e.doc.store,t.origin))||(n=t,r.clear())}t=t.right}this.left=n}if(null!==this.left){const e=this.left.right;this.right=e,this.left.right=this}else{let e;if(null!==this.parentSub)for(e=this.parent._map.get(this.parentSub)||null;null!==e&&null!==e.left;)e=e.left;else e=this.parent._start,this.parent._start=this;this.right=e}null!==this.right?this.right.left=this:null!==this.parentSub&&(this.parent._map.set(this.parentSub,this),null!==this.left&&this.left.delete(e)),null===this.parentSub&&this.countable&&!this.deleted&&(this.parent._length+=this.length),addStruct(e.doc.store,this),this.content.integrate(e,this),addChangedTypeToTransaction(e,this.parent,this.parentSub),(null!==this.parent._item&&this.parent._item.deleted||null!==this.parentSub&&null!==this.right)&&this.delete(e)}else new GC(this.id,this.length).integrate(e,0)}get next(){let e=this.right;for(;null!==e&&e.deleted;)e=e.right;return e}get prev(){let e=this.left;for(;null!==e&&e.deleted;)e=e.left;return e}get lastId(){return 1===this.length?this.id:createID(this.id.client,this.id.clock+this.length-1)}mergeWith(e){if(this.constructor===e.constructor&&compareIDs(e.origin,this.lastId)&&this.right===e&&compareIDs(this.rightOrigin,e.rightOrigin)&&this.id.client===e.id.client&&this.id.clock+this.length===e.id.clock&&this.deleted===e.deleted&&null===this.redone&&null===e.redone&&this.content.constructor===e.content.constructor&&this.content.mergeWith(e.content)){const t=this.parent._searchMarker;return t&&t.forEach((t=>{t.p===e&&(t.p=this,!this.deleted&&this.countable&&(t.index-=this.length))})),e.keep&&(this.keep=!0),this.right=e.right,null!==this.right&&(this.right.left=this),this.length+=e.length,!0}return!1}delete(e){if(!this.deleted){const t=this.parent;this.countable&&null===this.parentSub&&(t._length-=this.length),this.markDeleted(),addToDeleteSet(e.deleteSet,this.id.client,this.id.clock,this.length),addChangedTypeToTransaction(e,t,this.parentSub),this.content.delete(e)}}gc(e,t){if(!this.deleted)throw error__namespace.unexpectedCase();this.content.gc(e),t?replaceStruct(e,this,new GC(this.id,this.length)):this.content=new ContentDeleted(this.length)}write(e,t){const n=t>0?createID(this.id.client,this.id.clock+t-1):this.origin,r=this.rightOrigin,i=this.parentSub,s=this.content.getRef()&binary__namespace.BITS5|(null===n?0:binary__namespace.BIT8)|(null===r?0:binary__namespace.BIT7)|(null===i?0:binary__namespace.BIT6);if(e.writeInfo(s),null!==n&&e.writeLeftID(n),null!==r&&e.writeRightID(r),null===n&&null===r){const t=this.parent;if(void 0!==t._item){const n=t._item;if(null===n){const n=findRootTypeKey(t);e.writeParentInfo(!0),e.writeString(n)}else e.writeParentInfo(!1),e.writeLeftID(n.id)}else t.constructor===String?(e.writeParentInfo(!0),e.writeString(t)):t.constructor===ID?(e.writeParentInfo(!1),e.writeLeftID(t)):error__namespace.unexpectedCase();null!==i&&e.writeString(i)}this.content.write(e,t)}}const readItemContent=(e,t)=>contentRefs[t&binary__namespace.BITS5](e),contentRefs=[()=>{error__namespace.unexpectedCase()},readContentDeleted,readContentJSON,readContentBinary,readContentString,readContentEmbed,readContentFormat,readContentType,readContentAny,readContentDoc,()=>{error__namespace.unexpectedCase()}],structSkipRefNumber=10;class Skip extends AbstractStruct{get deleted(){return!0}delete(){}mergeWith(e){return this.constructor===e.constructor&&(this.length+=e.length,!0)}integrate(e,t){error__namespace.unexpectedCase()}write(e,t){e.writeInfo(10),encoding__namespace.writeVarUint(e.restEncoder,this.length-t)}getMissing(e,t){return null}}const glo="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof window?window:"undefined"!==typeof global?global:{},importIdentifier="__ $YJS$ __";!0===glo["__ $YJS$ __"]&&console.error("Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438"),glo["__ $YJS$ __"]=!0,exports.AbsolutePosition=AbsolutePosition,exports.AbstractConnector=AbstractConnector,exports.AbstractStruct=AbstractStruct,exports.AbstractType=AbstractType,exports.Array=YArray,exports.ContentAny=ContentAny,exports.ContentBinary=ContentBinary,exports.ContentDeleted=ContentDeleted,exports.ContentEmbed=ContentEmbed,exports.ContentFormat=ContentFormat,exports.ContentJSON=ContentJSON,exports.ContentString=ContentString,exports.ContentType=ContentType,exports.Doc=Doc,exports.GC=GC,exports.ID=ID,exports.Item=Item,exports.Map=YMap,exports.PermanentUserData=PermanentUserData,exports.RelativePosition=RelativePosition,exports.Snapshot=Snapshot,exports.Text=YText,exports.Transaction=Transaction,exports.UndoManager=UndoManager,exports.UpdateEncoderV1=UpdateEncoderV1,exports.XmlElement=YXmlElement,exports.XmlFragment=YXmlFragment,exports.XmlHook=YXmlHook,exports.XmlText=YXmlText,exports.YArrayEvent=YArrayEvent,exports.YEvent=YEvent,exports.YMapEvent=YMapEvent,exports.YTextEvent=YTextEvent,exports.YXmlEvent=YXmlEvent,exports.applyUpdate=applyUpdate,exports.applyUpdateV2=applyUpdateV2,exports.cleanupYTextFormatting=cleanupYTextFormatting,exports.compareIDs=compareIDs,exports.compareRelativePositions=compareRelativePositions,exports.convertUpdateFormatV1ToV2=convertUpdateFormatV1ToV2,exports.convertUpdateFormatV2ToV1=convertUpdateFormatV2ToV1,exports.createAbsolutePositionFromRelativePosition=createAbsolutePositionFromRelativePosition,exports.createDeleteSet=createDeleteSet,exports.createDeleteSetFromStructStore=createDeleteSetFromStructStore,exports.createDocFromSnapshot=createDocFromSnapshot,exports.createID=createID,exports.createRelativePositionFromJSON=createRelativePositionFromJSON,exports.createRelativePositionFromTypeIndex=createRelativePositionFromTypeIndex,exports.createSnapshot=createSnapshot,exports.decodeRelativePosition=decodeRelativePosition,exports.decodeSnapshot=decodeSnapshot,exports.decodeSnapshotV2=decodeSnapshotV2,exports.decodeStateVector=decodeStateVector,exports.decodeUpdate=decodeUpdate,exports.decodeUpdateV2=decodeUpdateV2,exports.diffUpdate=diffUpdate,exports.diffUpdateV2=diffUpdateV2,exports.emptySnapshot=emptySnapshot,exports.encodeRelativePosition=encodeRelativePosition,exports.encodeSnapshot=encodeSnapshot,exports.encodeSnapshotV2=encodeSnapshotV2,exports.encodeStateAsUpdate=encodeStateAsUpdate,exports.encodeStateAsUpdateV2=encodeStateAsUpdateV2,exports.encodeStateVector=encodeStateVector,exports.encodeStateVectorFromUpdate=encodeStateVectorFromUpdate,exports.encodeStateVectorFromUpdateV2=encodeStateVectorFromUpdateV2,exports.equalSnapshots=equalSnapshots,exports.findIndexSS=findIndexSS,exports.findRootTypeKey=findRootTypeKey,exports.getItem=getItem,exports.getState=getState,exports.getTypeChildren=getTypeChildren,exports.isDeleted=isDeleted,exports.isParentOf=isParentOf,exports.iterateDeletedStructs=iterateDeletedStructs,exports.logType=logType,exports.logUpdate=logUpdate,exports.logUpdateV2=logUpdateV2,exports.mergeUpdates=mergeUpdates,exports.mergeUpdatesV2=mergeUpdatesV2,exports.parseUpdateMeta=parseUpdateMeta,exports.parseUpdateMetaV2=parseUpdateMetaV2,exports.readUpdate=readUpdate,exports.readUpdateV2=readUpdateV2,exports.relativePositionToJSON=relativePositionToJSON,exports.snapshot=snapshot,exports.transact=transact,exports.tryGc=tryGc,exports.typeListToArraySnapshot=typeListToArraySnapshot,exports.typeMapGetSnapshot=typeMapGetSnapshot;